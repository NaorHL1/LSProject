{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport react from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CustomInput = function CustomInput(_ref) {\n  var value = _ref.value,\n      setValue = _ref.setValue,\n      placeholder = _ref.placeholder,\n      secureTextEntry = _ref.secureTextEntry;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      show = _useState2[0],\n      setShow = _useState2[1];\n\n  var _useState3 = useState(secureTextEntry),\n      _useState4 = _slicedToArray(_useState3, 2),\n      visible = _useState4[0],\n      setVisible = _useState4[1];\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      placeholder: placeholder,\n      style: styles.input,\n      value: value,\n      onChangeText: setValue,\n      secureTextEntry: secureTextEntry\n    }), \"if (secureTextEntry)\", _jsx(TouchableOpacity, {\n      styles: styles.btnEye,\n      onPress: function onPress() {\n        setVisible(!visible);\n        setShow(!show);\n      },\n      children: _jsx(Icon, {\n        name: show === false ? 'visibility' : 'visibility-off',\n        size: 21,\n        style: styles.icon\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    width: '75%'\n  },\n  input: {\n    fontSize: 14,\n    fontWeight: '500',\n    lineHeight: Platform.OS === 'ios' ? 20 : 40,\n    height: Platform.OS === 'ios' ? 25 : 42,\n    paddingHorizontal: 5,\n    borderBottomWidth: 1.8,\n    borderBottomColor: '#79B5AF'\n  },\n  btnEye: {\n    position: 'absolute',\n    color: 'black',\n    borderWidth: 2,\n    paddingRight: '100%',\n    alignItems: 'flex-end'\n  },\n  icon: {\n    position: 'absolute',\n    left: 398,\n    bottom: 7\n  }\n});\nexport default CustomInput;","map":{"version":3,"sources":["C:/Users/Naor/Visual Code Files/WorkersManager/components/CustomInput.js"],"names":["react","Icon","useState","CustomInput","value","setValue","placeholder","secureTextEntry","show","setShow","visible","setVisible","styles","container","input","btnEye","icon","StyleSheet","create","width","fontSize","fontWeight","lineHeight","Platform","OS","height","paddingHorizontal","borderBottomWidth","borderBottomColor","position","color","borderWidth","paddingRight","alignItems","left","bottom"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AAEA,OAAOC,IAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;;;;AACA,IAAMC,WAAW,GAAC,SAAZA,WAAY,OAAgD;AAAA,MAA9CC,KAA8C,QAA9CA,KAA8C;AAAA,MAAxCC,QAAwC,QAAxCA,QAAwC;AAAA,MAA/BC,WAA+B,QAA/BA,WAA+B;AAAA,MAAnBC,eAAmB,QAAnBA,eAAmB;;AAE9D,kBAAoBL,QAAQ,CAAC,KAAD,CAA5B;AAAA;AAAA,MAAMM,IAAN;AAAA,MAAWC,OAAX;;AACA,mBAA0BP,QAAQ,CAACK,eAAD,CAAlC;AAAA;AAAA,MAAMG,OAAN;AAAA,MAAcC,UAAd;;AAEA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,eACI,KAAC,SAAD;AACA,MAAA,WAAW,EAAEP,WADb;AAEA,MAAA,KAAK,EAAEM,MAAM,CAACE,KAFd;AAGA,MAAA,KAAK,EAAEV,KAHP;AAIA,MAAA,YAAY,EAAEC,QAJd;AAKA,MAAA,eAAe,EAAEE;AALjB,MADJ,0BASQ,KAAC,gBAAD;AAAkB,MAAA,MAAM,EAAEK,MAAM,CAACG,MAAjC;AACA,MAAA,OAAO,EAAE,mBAAI;AACbJ,QAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACAD,QAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACC,OAJD;AAAA,gBAMA,KAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,IAAI,KAAG,KAAP,GAAa,YAAb,GAA0B,gBAAtC;AAAwD,QAAA,IAAI,EAAE,EAA9D;AAAkE,QAAA,KAAK,EAAEI,MAAM,CAACI;AAAhF;AANA,MATR;AAAA,IADJ;AAqBH,CA1BD;;AA2BA,IAAMJ,MAAM,GAACK,UAAU,CAACC,MAAX,CAAkB;AAC3BL,EAAAA,SAAS,EAAC;AACNM,IAAAA,KAAK,EAAC;AADA,GADiB;AAI3BL,EAAAA,KAAK,EAAC;AACFM,IAAAA,QAAQ,EAAC,EADP;AAEFC,IAAAA,UAAU,EAAC,KAFT;AAGFC,IAAAA,UAAU,EAAEC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,EAAxB,GAA6B,EAHvC;AAIFC,IAAAA,MAAM,EAACF,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,EAAxB,GAA6B,EAJlC;AAKFE,IAAAA,iBAAiB,EAAC,CALhB;AAMFC,IAAAA,iBAAiB,EAAC,GANhB;AAOFC,IAAAA,iBAAiB,EAAC;AAPhB,GAJqB;AAa3Bb,EAAAA,MAAM,EAAC;AACHc,IAAAA,QAAQ,EAAC,UADN;AAEHC,IAAAA,KAAK,EAAC,OAFH;AAGHC,IAAAA,WAAW,EAAC,CAHT;AAIHC,IAAAA,YAAY,EAAC,MAJV;AAKHC,IAAAA,UAAU,EAAC;AALR,GAboB;AAoB3BjB,EAAAA,IAAI,EAAC;AACDa,IAAAA,QAAQ,EAAC,UADR;AAEDK,IAAAA,IAAI,EAAC,GAFJ;AAGDC,IAAAA,MAAM,EAAC;AAHN;AApBsB,CAAlB,CAAb;AA0BA,eAAehC,WAAf","sourcesContent":["import react from 'react'\r\nimport{View,Text,TextInput,StyleSheet,Platform,TouchableOpacity} from 'react-native'\r\nimport Icon from 'react-native-vector-icons/MaterialIcons'\r\nimport { useState } from 'react';\r\nconst CustomInput=({value,setValue,placeholder,secureTextEntry})=>{\r\n\r\n    const[show,setShow]=useState(false);\r\n    const[visible,setVisible]=useState(secureTextEntry);\r\n\r\n    return(\r\n        <View style={styles.container}>\r\n            <TextInput\r\n            placeholder={placeholder} \r\n            style={styles.input}\r\n            value={value}\r\n            onChangeText={setValue}\r\n            secureTextEntry={secureTextEntry}\r\n            />\r\n            if (secureTextEntry){\r\n                <TouchableOpacity styles={styles.btnEye}\r\n                onPress={()=>{\r\n                setVisible(!visible)\r\n                setShow(!show)\r\n                }\r\n                }>\r\n                <Icon name={show===false?'visibility':'visibility-off'} size={21} style={styles.icon}></Icon>\r\n                </TouchableOpacity>\r\n            }\r\n        </View>\r\n    )\r\n}\r\nconst styles=StyleSheet.create({\r\n    container:{\r\n        width:'75%',\r\n    },\r\n    input:{\r\n        fontSize:14,\r\n        fontWeight:'500',\r\n        lineHeight: Platform.OS === 'ios' ? 20 : 40,\r\n        height:Platform.OS === 'ios' ? 25 : 42,\r\n        paddingHorizontal:5,\r\n        borderBottomWidth:1.8,\r\n        borderBottomColor:'#79B5AF'\r\n    },\r\n    btnEye:{\r\n        position:'absolute',\r\n        color:'black',\r\n        borderWidth:2,\r\n        paddingRight:'100%',\r\n        alignItems:'flex-end',\r\n    },\r\n    icon:{\r\n        position:'absolute',\r\n        left:398,\r\n        bottom:7\r\n        },\r\n})\r\nexport default CustomInput"]},"metadata":{},"sourceType":"module"}