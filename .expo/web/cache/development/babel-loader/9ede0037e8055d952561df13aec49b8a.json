{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { StatusBar } from 'expo-status-bar';\nimport { useState } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Touchable from \"react-native-web/dist/exports/Touchable\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { LangPicker } from \"./components/LangPicker\";\nimport { DownOutlined } from '@ant-design/icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState('En'),\n      _useState2 = _slicedToArray(_useState, 2),\n      chooseData = _useState2[0],\n      setchooseData = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLangVisible = _useState4[0],\n      setisLangVisible = _useState4[1];\n\n  var changeLangVisibility = function changeLangVisibility(bool) {\n    setisLangVisible(bool);\n  };\n\n  var setData = function setData(option) {\n    setchooseData(option);\n  };\n\n  return _jsxs(SafeAreaView, {\n    children: [_jsx(Text, {\n      style: styles.sectionTitle,\n      children: \"Sign In\"\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return changeLangVisibility(true);\n      },\n      style: styles.touchableOpacity,\n      children: _jsx(Text, {\n        style: styles.text,\n        children: chooseData\n      })\n    }), _jsx(Modal, {\n      transparent: true,\n      animationType: \"fade\",\n      visible: isLangVisible,\n      nRequestClose: function nRequestClose() {\n        return changeLangVisibility(false);\n      },\n      children: _jsx(LangPicker, {\n        changeLangVisibility: changeLangVisibility,\n        setData: setData\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#edf1f2',\n    resizeMode: 'contain'\n  },\n  sectionTitle: _objectSpread({\n    height: 50,\n    fontSize: 40,\n    fontWeight: 'bold'\n  }, Platform.select({\n    ios: {\n      alignSelf: 'flex-start',\n      marginLeft: 40,\n      marginTop: 80\n    },\n    android: {\n      alignSelf: 'flex-start',\n      marginLeft: 40,\n      marginTop: 80\n    },\n    default: {\n      alignSelf: 'center',\n      marginTop: 100\n    }\n  })),\n  text: _objectSpread({\n    fontSize: 22\n  }, Platform.select({\n    ios: {\n      color: 'grey'\n    },\n    android: {\n      color: 'grey'\n    },\n    default: {\n      color: 'black'\n    }\n  })),\n  square: _objectSpread({\n    width: 20,\n    height: 20\n  }, Platform.select({\n    ios: {\n      backgroundColor: 'grey'\n    },\n    android: {\n      backgroundColor: 'grey'\n    },\n    default: {\n      backgroundColor: 'white'\n    }\n  })),\n  touchableOpacity: _objectSpread({}, Platform.select({\n    ios: {\n      alignSelf: 'flex-end',\n      width: 50\n    },\n    android: {\n      alignSelf: 'flex-end'\n    },\n    default: {\n      alignSelf: 'flex-end',\n      marginRight: 400,\n      wrap: wrap\n    }\n  }))\n});","map":{"version":3,"sources":["C:/Users/Naor/Visual Code Files/WorkersManager/App.js"],"names":["StatusBar","useState","LangPicker","DownOutlined","App","chooseData","setchooseData","isLangVisible","setisLangVisible","changeLangVisibility","bool","setData","option","styles","sectionTitle","touchableOpacity","text","StyleSheet","create","container","backgroundColor","resizeMode","height","fontSize","fontWeight","Platform","select","ios","alignSelf","marginLeft","marginTop","android","default","color","square","width","marginRight","wrap"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { useState } from 'react';\nimport { SafeAreaView, StyleSheet, Text, Touchable, TouchableOpacity, View,Modal , Platform} from 'react-native';\nimport {LangPicker} from './components/LangPicker';\nimport {DownOutlined } from '@ant-design/icons'\nexport default function App() {\n  \n\n  const [chooseData,setchooseData]=useState('En');\n  const [isLangVisible,setisLangVisible]= useState(false);\n\n  const changeLangVisibility=(bool)=>{\n    setisLangVisible(bool)\n  }\n  const setData=(option)=>{\n    setchooseData(option)\n  }\n  return (\n    <SafeAreaView>\n      <Text style={styles.sectionTitle}>Sign In</Text>\n      <StatusBar style=\"auto\" />\n      <TouchableOpacity  onPress={()=>changeLangVisibility(true)} \n      style={styles.touchableOpacity}>\n        <Text style={styles.text}>{chooseData}</Text>\n        </TouchableOpacity>\n        <Modal transparent={true}\n        animationType='fade'\n        visible= {isLangVisible}\n        nRequestClose={()=>changeLangVisibility(false)\n        }\n      >\n        <LangPicker\n          changeLangVisibility={changeLangVisibility}\n          setData={setData}\n        />\n    </Modal>\n    </SafeAreaView>\n    \n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#edf1f2',\n    resizeMode: 'contain', \n  },\n  sectionTitle: {\n    height: 50,\n    fontSize: 40,\n    fontWeight: 'bold',\n    ...Platform.select({\n    ios: {\n      alignSelf:'flex-start',\n      marginLeft: 40,\n      marginTop: 80,\n    },\n    android: {\n    alignSelf:'flex-start',\n    marginLeft: 40,\n    marginTop: 80,\n    },\n    default: {\n      alignSelf:'center',\n      marginTop:100\n    },\n  })\n  },\n  text:{\n    fontSize:22,\n    ...Platform.select({\n      ios: {\n      color:'grey',\n      },\n      android: {\n      color:'grey',\n      },\n      default: {\n        color:'black',\n        \n      },\n    })\n  },\n  square:{\n    width: 20,\n    height: 20,\n    ...Platform.select({\n      ios: {\n        backgroundColor:'grey'\n            },\n      android: {\n        backgroundColor:'grey'\n            },\n      default: {\n        backgroundColor:'white'\n      },\n    })\n    },\n  touchableOpacity:{\n    ...Platform.select({\n      ios: {\n        alignSelf:'flex-end',\n        width:50        \n      },\n      android: {\n        alignSelf:'flex-end',        \n            },\n      default: {\n        alignSelf:'flex-end',\n        marginRight:400,\n        wrap                \n      },\n    })\n    },\n});\n"]},"metadata":{},"sourceType":"module"}