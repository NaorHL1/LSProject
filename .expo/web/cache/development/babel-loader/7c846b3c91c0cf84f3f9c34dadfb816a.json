{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport react from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport { useState } from 'react';\nimport i18n from \"../Context/changelang\";\nimport { Trans, useTranslation, initReactI18next } from \"react-i18next\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CustomInput = function CustomInput(_ref) {\n  var value = _ref.value,\n      setValue = _ref.setValue,\n      placeholder = _ref.placeholder,\n      hidden = _ref.hidden,\n      direct = _ref.direct;\n  var currentlanguage = i18n.language;\n\n  if (!direct) {\n    direct = 'right';\n  }\n\n  ;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      show = _useState2[0],\n      setShow = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      visible = _useState4[0],\n      setVisible = _useState4[1];\n\n  var _useState5 = useState(hidden),\n      _useState6 = _slicedToArray(_useState5, 2),\n      hidePassword = _useState6[0],\n      setHidePassword = _useState6[1];\n\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      placeholder: placeholder,\n      style: [styles.input, {\n        textAlign: i18n.language === 'En' ? 'left' : direct\n      }],\n      value: value,\n      onChangeText: setValue,\n      secureTextEntry: visible\n    }), hidden ? _jsx(TouchableOpacity, {\n      styles: [styles.btnEye],\n      onPress: function onPress() {\n        setVisible(!visible);\n        setShow(!show);\n      },\n      children: _jsx(Icon, {\n        name: show === false ? 'visibility' : 'visibility-off',\n        size: 21,\n        style: [styles.icon, {\n          alignSelf: i18n.language === 'En' ? 'flex-end' : 'flex-start'\n        }]\n      })\n    }) : null]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    width: '79%'\n  },\n  input: {\n    fontSize: 14,\n    fontWeight: '450',\n    fontFamily: Platform.OS === 'ios' || 'android' ? null : 'sans-serif',\n    marginTop: Platform.OS === 'ios' || 'android' ? 5 : 0,\n    lineHeight: Platform.OS === 'ios' || 'android' ? 20 : 40,\n    height: Platform.OS === 'ios' || 'android' ? 40 : 42,\n    paddingHorizontal: 5,\n    borderBottomWidth: 1.6,\n    borderBottomColor: '#B0B8BF',\n    placeholderTextColor: '#adb5bd'\n  },\n  btnEye: {\n    position: 'absolute',\n    color: 'black'\n  },\n  icon: {\n    position: 'absolute',\n    bottom: 7\n  }\n});\nexport default CustomInput;","map":{"version":3,"sources":["C:/Users/Naor/Visual Code Files/WorkersManager/components/CustomInput.js"],"names":["react","Icon","useState","i18n","Trans","useTranslation","initReactI18next","CustomInput","value","setValue","placeholder","hidden","direct","currentlanguage","language","show","setShow","visible","setVisible","hidePassword","setHidePassword","styles","container","input","textAlign","btnEye","icon","alignSelf","StyleSheet","create","width","fontSize","fontWeight","fontFamily","Platform","OS","marginTop","lineHeight","height","paddingHorizontal","borderBottomWidth","borderBottomColor","placeholderTextColor","position","color","bottom"],"mappings":"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","sourcesContent":["import react from 'react'\r\nimport{View,Text,TextInput,StyleSheet,Platform,TouchableOpacity, SafeAreaView} from 'react-native'\r\nimport Icon from 'react-native-vector-icons/MaterialIcons'\r\nimport { useState } from 'react';\r\nimport i18n from '../Context/changelang';\r\nimport { Trans,useTranslation, initReactI18next } from \"react-i18next\"; \r\n\r\nconst CustomInput=({value,setValue,placeholder,hidden,direct})=>{\r\n    const currentlanguage=i18n.language;\r\n    if(!direct){\r\n    direct='right';\r\n    };\r\n    const[show,setShow]=useState(false);\r\n    const[visible,setVisible]=useState(false);\r\n    const[hidePassword,setHidePassword]=useState(hidden);\r\n    return(\r\n        <SafeAreaView style={styles.container}>\r\n            <TextInput \r\n            placeholder={placeholder} \r\n            style={[styles.input,{textAlign:i18n.language === 'En' ? 'left':direct}]}\r\n            value={value}\r\n            onChangeText={setValue}\r\n            secureTextEntry={visible}\r\n            />\r\n            {hidden ? <TouchableOpacity styles={[styles.btnEye]}\r\n                onPress={()=>{\r\n                setVisible(!visible)\r\n                setShow(!show)\r\n                }\r\n            }>\r\n                <Icon  name={show===false?'visibility':'visibility-off'}\r\n                 size={21} style={[styles.icon,{alignSelf:i18n.language === 'En' ? 'flex-end':'flex-start'}]}></Icon>\r\n                </TouchableOpacity> : null}\r\n        </SafeAreaView>\r\n    )\r\n}\r\nconst styles=StyleSheet.create({\r\n    container:{\r\n        width:'79%',\r\n    },\r\n    input:{\r\n        fontSize:14,\r\n        fontWeight:'450',\r\n        fontFamily:Platform.OS === 'ios' || 'android' ? null :'sans-serif',\r\n        marginTop:Platform.OS === 'ios' || 'android' ? 5 : 0,\r\n        lineHeight:Platform.OS === 'ios' || 'android' ? 20 : 40,\r\n        height:Platform.OS === 'ios' || 'android' ? 40 : 42,\r\n        paddingHorizontal:5,\r\n        borderBottomWidth:1.6,\r\n        borderBottomColor:'#B0B8BF',\r\n        placeholderTextColor:'#adb5bd'\r\n    },\r\n    btnEye:{\r\n        position:'absolute',\r\n        color:'black',\r\n        },\r\n    icon:{\r\n        position:'absolute',\r\n        bottom:7,\r\n        },\r\n})\r\nexport default CustomInput"]},"metadata":{},"sourceType":"module"}