{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport react from \"react\";\nimport { DownOutlined } from '@ant-design/icons';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar OPTIONS = ['En', 'He'];\nvar WIDTH = Dimensions.get('window').width;\nvar HEIGHT = Dimensions.get('window').height;\n\nvar LangPicker = function LangPicker(props) {\n  var onPressItem = function onPressItem(option) {\n    props.changeLangVisibility(false);\n    props.setData(option);\n  };\n\n  var option = OPTIONS.map(function (item, index) {\n    return _jsx(TouchableOpacity, {\n      style: styles.option,\n      onPress: function onPress() {\n        return onPressItem(item);\n      },\n      children: _jsx(View, {\n        onLayout: function onLayout(event) {\n          var layout = event.nativeEvent.layout;\n          console.log('height:', layout.height);\n          console.log('width:', layout.width);\n          console.log('x:', layout.x);\n          console.log('y:', layout.y);\n        },\n        children: _jsx(Text, {\n          style: styles.text,\n          children: item\n        })\n      })\n    }, index);\n  });\n  return _jsx(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.changeLangVisibility(false);\n    },\n    style: styles.container,\n    children: _jsx(View, {\n      style: (styles.lang, {\n        width: 50,\n        height: 70\n      }),\n      children: _jsx(ScrollView, {\n        children: option\n      })\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'flex-end',\n    borderColor: \"#e2e1df\",\n    borderWidth: 1.6,\n    opacity: 0.9\n  },\n  lang: {\n    backgroundColor: 'white'\n  },\n  option: {\n    alignItems: 'center'\n  },\n  text: _objectSpread({\n    fontSize: 22,\n    fontWeight: 'normal'\n  }, Platform.select({\n    ios: {\n      color: 'grey',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    android: {\n      color: 'grey'\n    },\n    default: {\n      color: 'black'\n    }\n  }))\n});\nexport { LangPicker };","map":{"version":3,"sources":["C:/Users/Naor/Visual Code Files/WorkersManager/components/LangPicker.js"],"names":["react","DownOutlined","OPTIONS","WIDTH","Dimensions","get","width","HEIGHT","height","LangPicker","props","onPressItem","option","changeLangVisibility","setData","map","item","index","styles","event","layout","nativeEvent","console","log","x","y","text","container","lang","StyleSheet","create","flex","alignItems","borderColor","borderWidth","opacity","backgroundColor","fontSize","fontWeight","Platform","select","ios","color","justifyContent","android","default"],"mappings":"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","sourcesContent":["import react from \"react\";\r\nimport {DownOutlined} from '@ant-design/icons';\r\nimport{\r\n    StyleSheet,Text,View,\r\n    TouchableOpacity, ScrollView,\r\n    Dimensions , Platform\r\n} from 'react-native'\r\nconst OPTIONS = ['En','He'];\r\nconst WIDTH=Dimensions.get('window').width;\r\nconst HEIGHT=Dimensions.get('window').height;\r\n\r\nconst LangPicker=(props)=>{\r\n    const onPressItem=(option)=>{\r\n        props.changeLangVisibility(false);\r\n        props.setData(option);\r\n    }\r\n    const option=OPTIONS.map((item,index)=>{\r\n        return(\r\n            <TouchableOpacity\r\n            style={styles.option}\r\n            key={index}\r\n            onPress={()=> onPressItem(item)}\r\n            >\r\n                <View\r\n  onLayout={event => {\r\n    const layout = event.nativeEvent.layout;\r\n    console.log('height:', layout.height);\r\n    console.log('width:', layout.width);\r\n    console.log('x:', layout.x);\r\n    console.log('y:', layout.y);\r\n  }}\r\n>\r\n                <Text style={styles.text}>{item}\r\n                </Text>\r\n                </View>\r\n            </TouchableOpacity>\r\n        )\r\n    })\r\n    return(\r\n        <TouchableOpacity\r\n        onPress={()=>props.changeLangVisibility(false)}\r\n        style={styles.container}\r\n        >\r\n\r\n            <View style={styles.lang,{width:50,height:70}}>\r\n                <ScrollView>\r\n                    {option}\r\n                </ScrollView>\r\n            </View>\r\n\r\n        </TouchableOpacity>\r\n    )\r\n}\r\nconst styles= StyleSheet.create({\r\n    container: {\r\n        flex:1,\r\n        alignItems:'flex-end',\r\n        borderColor: \"#e2e1df\",\r\n        borderWidth: 1.6,\r\n        opacity:0.9,\r\n    },\r\n    lang:{\r\n        backgroundColor: 'white',\r\n        },\r\n    option:{\r\n        alignItems:'center',\r\n        },\r\n    text:{\r\n        fontSize:22,\r\n        fontWeight:'normal',\r\n        ...Platform.select({\r\n            ios: {\r\n            color:'grey',\r\n            alignItems:'center',\r\n            justifyContent:'center'\r\n            },\r\n            android: {\r\n            color:'grey',\r\n            },\r\n            default: {\r\n              color:'black',\r\n              \r\n            },\r\n          })\r\n    },\r\n})\r\n\r\nexport {LangPicker}"]},"metadata":{},"sourceType":"module"}