{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport react from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar OPTIONS = ['En', 'He'];\nvar WIDTH = Dimensions.get('window').width;\nvar HEIGHT = Dimensions.get('window').height;\n\nvar LangPicker = function LangPicker(props) {\n  var onPressItem = function onPressItem(option) {\n    props.changeLangVisibility(false);\n    props.setData(option);\n  };\n\n  var option = OPTIONS.map(function (item, index) {\n    return _jsx(TouchableOpacity, {\n      style: styles.option,\n      onPress: function onPress() {\n        return onPressItem(item);\n      },\n      children: _jsx(Text, {\n        style: styles.text,\n        children: item\n      })\n    }, index);\n  });\n  return _jsx(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.changeLangVisibility(false);\n    },\n    style: styles.container,\n    children: _jsx(View, {\n      style: (styles.lang, {\n        width: WIDTH / 2,\n        height: HEIGHT\n      }),\n      children: _jsx(ScrollView, {\n        children: option\n      })\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'flex-end',\n    marginTop: 200\n  },\n  lang: {\n    backgroundColor: 'white',\n    borderRadius: 10\n  },\n  option: _objectSpread({\n    alignItems: 'center'\n  }, Platform.select({\n    ios: {\n      marginLeft: 120\n    },\n    android: {\n      marginLeft: 120\n    },\n    default: {\n      marginRight: 85\n    }\n  })),\n  text: _objectSpread({\n    fontSize: 22,\n    fontWeight: 'normal'\n  }, Platform.select({\n    ios: {\n      color: 'grey',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    android: {\n      color: 'grey'\n    },\n    default: {\n      color: 'black'\n    }\n  }))\n});\nexport { LangPicker };","map":{"version":3,"sources":["C:/Users/Naor/Visual Code Files/WorkersManager/components/LangPicker.js"],"names":["react","OPTIONS","WIDTH","Dimensions","get","width","HEIGHT","height","LangPicker","props","onPressItem","option","changeLangVisibility","setData","map","item","index","styles","text","container","lang","StyleSheet","create","alignItems","marginTop","backgroundColor","borderRadius","Platform","select","ios","marginLeft","android","default","marginRight","fontSize","fontWeight","color","justifyContent"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;;AAMA,IAAMC,OAAO,GAAG,CAAC,IAAD,EAAM,IAAN,CAAhB;AACA,IAAMC,KAAK,GAACC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAArC;AACA,IAAMC,MAAM,GAACH,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBG,MAAtC;;AAEA,IAAMC,UAAU,GAAC,SAAXA,UAAW,CAACC,KAAD,EAAS;AACtB,MAAMC,WAAW,GAAC,SAAZA,WAAY,CAACC,MAAD,EAAU;AACxBF,IAAAA,KAAK,CAACG,oBAAN,CAA2B,KAA3B;AACAH,IAAAA,KAAK,CAACI,OAAN,CAAcF,MAAd;AACH,GAHD;;AAIA,MAAMA,MAAM,GAACV,OAAO,CAACa,GAAR,CAAY,UAACC,IAAD,EAAMC,KAAN,EAAc;AACnC,WACI,KAAC,gBAAD;AACA,MAAA,KAAK,EAAEC,MAAM,CAACN,MADd;AAGA,MAAA,OAAO,EAAE;AAAA,eAAKD,WAAW,CAACK,IAAD,CAAhB;AAAA,OAHT;AAAA,gBAKI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEE,MAAM,CAACC,IAApB;AAAA,kBAA2BH;AAA3B;AALJ,OAEKC,KAFL,CADJ;AAUH,GAXY,CAAb;AAYA,SACI,KAAC,gBAAD;AACA,IAAA,OAAO,EAAE;AAAA,aAAIP,KAAK,CAACG,oBAAN,CAA2B,KAA3B,CAAJ;AAAA,KADT;AAEA,IAAA,KAAK,EAAEK,MAAM,CAACE,SAFd;AAAA,cAII,KAAC,IAAD;AAAM,MAAA,KAAK,GAAEF,MAAM,CAACG,IAAP,EAAY;AAACf,QAAAA,KAAK,EAACH,KAAK,GAAC,CAAb;AAAeK,QAAAA,MAAM,EAACD;AAAtB,OAAd,CAAX;AAAA,gBACI,KAAC,UAAD;AAAA,kBACKK;AADL;AADJ;AAJJ,IADJ;AAaH,CA9BD;;AA+BA,IAAMM,MAAM,GAAEI,UAAU,CAACC,MAAX,CAAkB;AAC5BH,EAAAA,SAAS,EAAE;AACPI,IAAAA,UAAU,EAAC,UADJ;AAEPC,IAAAA,SAAS,EAAC;AAFH,GADiB;AAK5BJ,EAAAA,IAAI,EAAC;AACDK,IAAAA,eAAe,EAAE,OADhB;AAEDC,IAAAA,YAAY,EAAE;AAFb,GALuB;AAS5Bf,EAAAA,MAAM;AACFY,IAAAA,UAAU,EAAC;AADT,KAECI,QAAQ,CAACC,MAAT,CAAgB;AACfC,IAAAA,GAAG,EAAE;AACDC,MAAAA,UAAU,EAAC;AADV,KADU;AAIfC,IAAAA,OAAO,EAAE;AACLD,MAAAA,UAAU,EAAC;AADN,KAJM;AAQfE,IAAAA,OAAO,EAAE;AACLC,MAAAA,WAAW,EAAC;AADP;AARM,GAAhB,CAFD,CATsB;AAwB5Bf,EAAAA,IAAI;AACAgB,IAAAA,QAAQ,EAAC,EADT;AAEAC,IAAAA,UAAU,EAAC;AAFX,KAGGR,QAAQ,CAACC,MAAT,CAAgB;AACfC,IAAAA,GAAG,EAAE;AACLO,MAAAA,KAAK,EAAC,MADD;AAELb,MAAAA,UAAU,EAAC,QAFN;AAGLc,MAAAA,cAAc,EAAC;AAHV,KADU;AAMfN,IAAAA,OAAO,EAAE;AACTK,MAAAA,KAAK,EAAC;AADG,KANM;AASfJ,IAAAA,OAAO,EAAE;AACPI,MAAAA,KAAK,EAAC;AADC;AATM,GAAhB,CAHH;AAxBwB,CAAlB,CAAd;AA4CA,SAAQ5B,UAAR","sourcesContent":["import react from \"react\";\r\nimport{\r\n    StyleSheet,Text,View,\r\n    TouchableOpacity, ScrollView,\r\n    Dimensions , Platform\r\n} from 'react-native'\r\nconst OPTIONS = ['En','He'];\r\nconst WIDTH=Dimensions.get('window').width;\r\nconst HEIGHT=Dimensions.get('window').height;\r\n\r\nconst LangPicker=(props)=>{\r\n    const onPressItem=(option)=>{\r\n        props.changeLangVisibility(false);\r\n        props.setData(option);\r\n    }\r\n    const option=OPTIONS.map((item,index)=>{\r\n        return(\r\n            <TouchableOpacity\r\n            style={styles.option}\r\n            key={index}\r\n            onPress={()=> onPressItem(item)}\r\n            >\r\n                <Text style={styles.text}>{item}\r\n                </Text>\r\n            </TouchableOpacity>\r\n        )\r\n    })\r\n    return(\r\n        <TouchableOpacity\r\n        onPress={()=>props.changeLangVisibility(false)}\r\n        style={styles.container}\r\n        >\r\n            <View style={styles.lang,{width:WIDTH/2,height:HEIGHT}}>\r\n                <ScrollView>\r\n                    {option}\r\n                </ScrollView>\r\n            </View>\r\n\r\n        </TouchableOpacity>\r\n    )\r\n}\r\nconst styles= StyleSheet.create({\r\n    container: {\r\n        alignItems:'flex-end',\r\n        marginTop:200,\r\n    },\r\n    lang:{\r\n        backgroundColor: 'white',\r\n        borderRadius: 10\r\n        },\r\n    option:{\r\n        alignItems:'center',\r\n        ...Platform.select({\r\n            ios: {\r\n                marginLeft:120,\r\n            },\r\n            android: {\r\n                marginLeft:120,\r\n\r\n            },\r\n            default: {\r\n                marginRight:85,\r\n                },\r\n          })\r\n        },\r\n    text:{\r\n        fontSize:22,\r\n        fontWeight:'normal',\r\n        ...Platform.select({\r\n            ios: {\r\n            color:'grey',\r\n            alignItems:'center',\r\n            justifyContent:'center'\r\n            },\r\n            android: {\r\n            color:'grey',\r\n            },\r\n            default: {\r\n              color:'black',\r\n              \r\n            },\r\n          })\r\n    },\r\n})\r\n\r\nexport {LangPicker}"]},"metadata":{},"sourceType":"module"}