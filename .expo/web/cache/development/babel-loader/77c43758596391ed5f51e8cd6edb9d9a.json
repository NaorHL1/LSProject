{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar react_native_gesture_handler_1 = require(\"react-native-gesture-handler\");\n\nvar useGestureStore_1 = __importDefault(require(\"./useGestureStore\"));\n\nvar useRecorder_1 = __importDefault(require(\"./useRecorder\"));\n\nvar GestureCapture = function GestureCapture(_a) {\n  var children = _a.children,\n      onCapture = _a.onCapture,\n      onPanRelease = _a.onPanRelease,\n      pointDistance = _a.pointDistance;\n\n  var _b = useGestureStore_1.default(),\n      resetStore = _b.reset,\n      addBreadcrumbToPath = _b.addBreadcrumbToPath,\n      setCoordinate = _b.setCoordinate,\n      path = _b.path,\n      offset = _b.offset;\n\n  var _c = useRecorder_1.default({\n    path: path,\n    pointDistance: pointDistance,\n    onCapture: onCapture\n  }),\n      resetRecorder = _c.reset,\n      gesture = _c.gesture,\n      gestureDirectionHistory = _c.gestureDirectionHistory;\n\n  var reset = function reset() {\n    resetStore();\n    resetRecorder();\n  };\n\n  return react_1.default.createElement(react_native_gesture_handler_1.PanGestureHandler, {\n    onGestureEvent: function onGestureEvent(_a) {\n      var nativeEvent = _a.nativeEvent;\n      addBreadcrumbToPath(nativeEvent);\n      setCoordinate({\n        x: nativeEvent.x,\n        y: nativeEvent.y\n      });\n    },\n    onHandlerStateChange: function onHandlerStateChange(_a) {\n      var nativeEvent = _a.nativeEvent;\n\n      if (nativeEvent.state === react_native_gesture_handler_1.State.END) {\n        reset();\n        onPanRelease(gesture);\n      }\n    }\n  }, children({\n    gesture: gesture,\n    gestureDirectionHistory: gestureDirectionHistory,\n    offset: offset\n  }));\n};\n\nGestureCapture.defaultProps = {\n  pointDistance: 20,\n  onCapture: function onCapture() {},\n  onPanRelease: function onPanRelease() {}\n};\nexports.default = GestureCapture;","map":{"version":3,"sources":["C:/Users/Naor/Visual Code Files/WorkersManager/node_modules/react-native-gesture-detector/dist/GestureRecorder.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","react_1","require","react_native_gesture_handler_1","useGestureStore_1","useRecorder_1","GestureCapture","_a","children","onCapture","onPanRelease","pointDistance","_b","default","resetStore","reset","addBreadcrumbToPath","setCoordinate","path","offset","_c","resetRecorder","gesture","gestureDirectionHistory","createElement","PanGestureHandler","onGestureEvent","nativeEvent","x","y","onHandlerStateChange","state","State","END","defaultProps"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = __importDefault(require(\"react\"));\n// @ts-ignore or we will break expo example\nvar react_native_gesture_handler_1 = require(\"react-native-gesture-handler\");\nvar useGestureStore_1 = __importDefault(require(\"./useGestureStore\"));\nvar useRecorder_1 = __importDefault(require(\"./useRecorder\"));\nvar GestureCapture = function (_a) {\n    var children = _a.children, onCapture = _a.onCapture, onPanRelease = _a.onPanRelease, pointDistance = _a.pointDistance;\n    var _b = useGestureStore_1.default(), resetStore = _b.reset, addBreadcrumbToPath = _b.addBreadcrumbToPath, setCoordinate = _b.setCoordinate, path = _b.path, offset = _b.offset;\n    var _c = useRecorder_1.default({\n        path: path,\n        pointDistance: pointDistance,\n        onCapture: onCapture,\n    }), resetRecorder = _c.reset, gesture = _c.gesture, gestureDirectionHistory = _c.gestureDirectionHistory;\n    var reset = function () {\n        resetStore();\n        resetRecorder();\n    };\n    return (react_1.default.createElement(react_native_gesture_handler_1.PanGestureHandler, { onGestureEvent: function (_a) {\n            var nativeEvent = _a.nativeEvent;\n            addBreadcrumbToPath(nativeEvent);\n            setCoordinate({ x: nativeEvent.x, y: nativeEvent.y });\n        }, onHandlerStateChange: function (_a) {\n            var nativeEvent = _a.nativeEvent;\n            if (nativeEvent.state === react_native_gesture_handler_1.State.END) {\n                reset();\n                onPanRelease(gesture);\n            }\n        } }, children({ gesture: gesture, gestureDirectionHistory: gestureDirectionHistory, offset: offset })));\n};\nGestureCapture.defaultProps = {\n    pointDistance: 20,\n    onCapture: function () { },\n    onPanRelease: function () { },\n};\nexports.default = GestureCapture;\n"]},"metadata":{},"sourceType":"script"}