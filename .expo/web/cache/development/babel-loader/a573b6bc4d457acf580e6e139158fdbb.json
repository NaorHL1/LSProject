{"ast":null,"code":"import Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useCallback, useImperativeHandle } from 'react';\nimport { Gesture, GestureDetector } from 'react-native-gesture-handler';\nimport Animated, { Extrapolate, interpolate, useAnimatedStyle, useSharedValue, withSpring } from 'react-native-reanimated';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    SCREEN_HEIGHT = _Dimensions$get.height;\n\nvar MAX_TRANSLATE_Y = -SCREEN_HEIGHT + 50;\nvar BottomSheet = React.forwardRef(function (_ref, ref) {\n  var children = _ref.children;\n  var translateY = useSharedValue(0);\n  var active = useSharedValue(false);\n  var scrollTo = useCallback(function (destination) {\n    'worklet';\n\n    active.value = destination !== 0;\n    translateY.value = withSpring(destination, {\n      damping: 50\n    });\n  }, []);\n  var isActive = useCallback(function () {\n    return active.value;\n  }, []);\n  useImperativeHandle(ref, function () {\n    return {\n      scrollTo: scrollTo,\n      isActive: isActive\n    };\n  }, [scrollTo, isActive]);\n  var context = useSharedValue({\n    y: 0\n  });\n  var gesture = Gesture.Pan().onStart(function () {\n    context.value = {\n      y: translateY.value\n    };\n  }).onUpdate(function (event) {\n    translateY.value = event.translationY + context.value.y;\n    translateY.value = Math.max(translateY.value, MAX_TRANSLATE_Y);\n  }).onEnd(function () {\n    if (translateY.value > -SCREEN_HEIGHT / 3) {\n      scrollTo(0);\n    } else if (translateY.value < -SCREEN_HEIGHT / 1.5) {\n      scrollTo(MAX_TRANSLATE_Y);\n    }\n  });\n  var rBottomSheetStyle = useAnimatedStyle(function () {\n    var borderRadius = interpolate(translateY.value, [MAX_TRANSLATE_Y + 50, MAX_TRANSLATE_Y], [25, 5], Extrapolate.CLAMP);\n    return {\n      borderRadius: borderRadius,\n      transform: [{\n        translateY: translateY.value\n      }]\n    };\n  });\n  return _jsx(GestureDetector, {\n    gesture: gesture,\n    children: _jsxs(Animated.View, {\n      style: [styles.bottomSheetContainer, rBottomSheetStyle],\n      children: [_jsx(View, {\n        style: styles.line\n      }), children]\n    })\n  });\n});\nvar styles = StyleSheet.create({\n  bottomSheetContainer: {\n    height: SCREEN_HEIGHT,\n    width: '100%',\n    backgroundColor: 'white',\n    position: 'absolute',\n    top: SCREEN_HEIGHT,\n    borderRadius: 25\n  },\n  line: {\n    width: 75,\n    height: 4,\n    backgroundColor: 'grey',\n    alignSelf: 'center',\n    marginVertical: 15,\n    borderRadius: 2\n  }\n});\nexport default BottomSheet;","map":{"version":3,"sources":["C:/Users/Naor/Visual Code Files/WorkersManager/components/BottomSheet.tsx"],"names":["React","useCallback","useImperativeHandle","Gesture","GestureDetector","Animated","Extrapolate","interpolate","useAnimatedStyle","useSharedValue","withSpring","Dimensions","get","SCREEN_HEIGHT","height","MAX_TRANSLATE_Y","BottomSheet","forwardRef","ref","children","translateY","active","scrollTo","destination","value","damping","isActive","context","y","gesture","Pan","onStart","onUpdate","event","translationY","Math","max","onEnd","rBottomSheetStyle","borderRadius","CLAMP","transform","styles","bottomSheetContainer","line","StyleSheet","create","width","backgroundColor","position","top","alignSelf","marginVertical"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,WAAhB,EAAwCC,mBAAxC,QAAmE,OAAnE;AACA,SAASC,OAAT,EAAkBC,eAAlB,QAAyC,8BAAzC;AACA,OAAOC,QAAP,IACEC,WADF,EAEEC,WAFF,EAGEC,gBAHF,EAIEC,cAJF,EAKEC,UALF,QAOO,yBAPP;;;;AASA,sBAAkCC,UAAU,CAACC,GAAX,CAAe,QAAf,CAAlC;AAAA,IAAgBC,aAAhB,mBAAQC,MAAR;;AAEA,IAAMC,eAAe,GAAG,CAACF,aAAD,GAAiB,EAAzC;AAWA,IAAMG,WAAW,GAAGhB,KAAK,CAACiB,UAAN,CAClB,gBAAeC,GAAf,EAAuB;AAAA,MAApBC,QAAoB,QAApBA,QAAoB;AACrB,MAAMC,UAAU,GAAGX,cAAc,CAAC,CAAD,CAAjC;AACA,MAAMY,MAAM,GAAGZ,cAAc,CAAC,KAAD,CAA7B;AAEA,MAAMa,QAAQ,GAAGrB,WAAW,CAAC,UAACsB,WAAD,EAAyB;AACpD;;AACAF,IAAAA,MAAM,CAACG,KAAP,GAAeD,WAAW,KAAK,CAA/B;AAEAH,IAAAA,UAAU,CAACI,KAAX,GAAmBd,UAAU,CAACa,WAAD,EAAc;AAAEE,MAAAA,OAAO,EAAE;AAAX,KAAd,CAA7B;AACD,GAL2B,EAKzB,EALyB,CAA5B;AAOA,MAAMC,QAAQ,GAAGzB,WAAW,CAAC,YAAM;AACjC,WAAOoB,MAAM,CAACG,KAAd;AACD,GAF2B,EAEzB,EAFyB,CAA5B;AAIAtB,EAAAA,mBAAmB,CAACgB,GAAD,EAAM;AAAA,WAAO;AAAEI,MAAAA,QAAQ,EAARA,QAAF;AAAYI,MAAAA,QAAQ,EAARA;AAAZ,KAAP;AAAA,GAAN,EAAsC,CACvDJ,QADuD,EAEvDI,QAFuD,CAAtC,CAAnB;AAKA,MAAMC,OAAO,GAAGlB,cAAc,CAAC;AAAEmB,IAAAA,CAAC,EAAE;AAAL,GAAD,CAA9B;AACA,MAAMC,OAAO,GAAG1B,OAAO,CAAC2B,GAAR,GACbC,OADa,CACL,YAAM;AACbJ,IAAAA,OAAO,CAACH,KAAR,GAAgB;AAAEI,MAAAA,CAAC,EAAER,UAAU,CAACI;AAAhB,KAAhB;AACD,GAHa,EAIbQ,QAJa,CAIJ,UAACC,KAAD,EAAW;AACnBb,IAAAA,UAAU,CAACI,KAAX,GAAmBS,KAAK,CAACC,YAAN,GAAqBP,OAAO,CAACH,KAAR,CAAcI,CAAtD;AACAR,IAAAA,UAAU,CAACI,KAAX,GAAmBW,IAAI,CAACC,GAAL,CAAShB,UAAU,CAACI,KAApB,EAA2BT,eAA3B,CAAnB;AACD,GAPa,EAQbsB,KARa,CAQP,YAAM;AACX,QAAIjB,UAAU,CAACI,KAAX,GAAmB,CAACX,aAAD,GAAiB,CAAxC,EAA2C;AACzCS,MAAAA,QAAQ,CAAC,CAAD,CAAR;AACD,KAFD,MAEO,IAAIF,UAAU,CAACI,KAAX,GAAmB,CAACX,aAAD,GAAiB,GAAxC,EAA6C;AAClDS,MAAAA,QAAQ,CAACP,eAAD,CAAR;AACD;AACF,GAda,CAAhB;AAgBA,MAAMuB,iBAAiB,GAAG9B,gBAAgB,CAAC,YAAM;AAC/C,QAAM+B,YAAY,GAAGhC,WAAW,CAC9Ba,UAAU,CAACI,KADmB,EAE9B,CAACT,eAAe,GAAG,EAAnB,EAAuBA,eAAvB,CAF8B,EAG9B,CAAC,EAAD,EAAK,CAAL,CAH8B,EAI9BT,WAAW,CAACkC,KAJkB,CAAhC;AAOA,WAAO;AACLD,MAAAA,YAAY,EAAZA,YADK;AAELE,MAAAA,SAAS,EAAE,CAAC;AAAErB,QAAAA,UAAU,EAAEA,UAAU,CAACI;AAAzB,OAAD;AAFN,KAAP;AAID,GAZyC,CAA1C;AAcA,SACE,KAAC,eAAD;AAAiB,IAAA,OAAO,EAAEK,OAA1B;AAAA,cACE,MAAC,QAAD,CAAU,IAAV;AAAe,MAAA,KAAK,EAAE,CAACa,MAAM,CAACC,oBAAR,EAA8BL,iBAA9B,CAAtB;AAAA,iBACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEI,MAAM,CAACE;AAApB,QADF,EAEGzB,QAFH;AAAA;AADF,IADF;AAQD,CA5DiB,CAApB;AA+DA,IAAMuB,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,oBAAoB,EAAE;AACpB7B,IAAAA,MAAM,EAAED,aADY;AAEpBkC,IAAAA,KAAK,EAAE,MAFa;AAGpBC,IAAAA,eAAe,EAAE,OAHG;AAIpBC,IAAAA,QAAQ,EAAE,UAJU;AAKpBC,IAAAA,GAAG,EAAErC,aALe;AAMpB0B,IAAAA,YAAY,EAAE;AANM,GADS;AAS/BK,EAAAA,IAAI,EAAE;AACJG,IAAAA,KAAK,EAAE,EADH;AAEJjC,IAAAA,MAAM,EAAE,CAFJ;AAGJkC,IAAAA,eAAe,EAAE,MAHb;AAIJG,IAAAA,SAAS,EAAE,QAJP;AAKJC,IAAAA,cAAc,EAAE,EALZ;AAMJb,IAAAA,YAAY,EAAE;AANV;AATyB,CAAlB,CAAf;AAmBA,eAAevB,WAAf","sourcesContent":["import { Dimensions, StyleSheet, Text, View } from 'react-native';\r\nimport React, { useCallback, useEffect, useImperativeHandle } from 'react';\r\nimport { Gesture, GestureDetector } from 'react-native-gesture-handler';\r\nimport Animated, {\r\n  Extrapolate,\r\n  interpolate,\r\n  useAnimatedStyle,\r\n  useSharedValue,\r\n  withSpring,\r\n  withTiming,\r\n} from 'react-native-reanimated';\r\n\r\nconst { height: SCREEN_HEIGHT } = Dimensions.get('window');\r\n\r\nconst MAX_TRANSLATE_Y = -SCREEN_HEIGHT + 50;\r\n\r\ntype BottomSheetProps = {\r\n  children?: React.ReactNode;\r\n};\r\n\r\nexport type BottomSheetRefProps = {\r\n  scrollTo: (destination: number) => void;\r\n  isActive: () => boolean;\r\n};\r\n\r\nconst BottomSheet = React.forwardRef<BottomSheetRefProps, BottomSheetProps>(\r\n  ({ children }, ref) => {\r\n    const translateY = useSharedValue(0);\r\n    const active = useSharedValue(false);\r\n\r\n    const scrollTo = useCallback((destination: number) => {\r\n      'worklet';\r\n      active.value = destination !== 0;\r\n\r\n      translateY.value = withSpring(destination, { damping: 50 });\r\n    }, []);\r\n\r\n    const isActive = useCallback(() => {\r\n      return active.value;\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({ scrollTo, isActive }), [\r\n      scrollTo,\r\n      isActive,\r\n    ]);\r\n\r\n    const context = useSharedValue({ y: 0 });\r\n    const gesture = Gesture.Pan()\r\n      .onStart(() => {\r\n        context.value = { y: translateY.value };\r\n      })\r\n      .onUpdate((event) => {\r\n        translateY.value = event.translationY + context.value.y;\r\n        translateY.value = Math.max(translateY.value, MAX_TRANSLATE_Y);\r\n      })\r\n      .onEnd(() => {\r\n        if (translateY.value > -SCREEN_HEIGHT / 3) {\r\n          scrollTo(0);\r\n        } else if (translateY.value < -SCREEN_HEIGHT / 1.5) {\r\n          scrollTo(MAX_TRANSLATE_Y);\r\n        }\r\n      });\r\n\r\n    const rBottomSheetStyle = useAnimatedStyle(() => {\r\n      const borderRadius = interpolate(\r\n        translateY.value,\r\n        [MAX_TRANSLATE_Y + 50, MAX_TRANSLATE_Y],\r\n        [25, 5],\r\n        Extrapolate.CLAMP\r\n      );\r\n\r\n      return {\r\n        borderRadius,\r\n        transform: [{ translateY: translateY.value }],\r\n      };\r\n    });\r\n\r\n    return (\r\n      <GestureDetector gesture={gesture}>\r\n        <Animated.View style={[styles.bottomSheetContainer, rBottomSheetStyle]}>\r\n          <View style={styles.line} />\r\n          {children}\r\n        </Animated.View>\r\n      </GestureDetector>\r\n    );\r\n  }\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  bottomSheetContainer: {\r\n    height: SCREEN_HEIGHT,\r\n    width: '100%',\r\n    backgroundColor: 'white',\r\n    position: 'absolute',\r\n    top: SCREEN_HEIGHT,\r\n    borderRadius: 25,\r\n  },\r\n  line: {\r\n    width: 75,\r\n    height: 4,\r\n    backgroundColor: 'grey',\r\n    alignSelf: 'center',\r\n    marginVertical: 15,\r\n    borderRadius: 2,\r\n  },\r\n});\r\n\r\nexport default BottomSheet;"]},"metadata":{},"sourceType":"module"}