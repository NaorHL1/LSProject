{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = require(\"react\");\n\nvar useDetector = function useDetector(_a) {\n  var gesture = _a.gesture,\n      path = _a.path,\n      slopRadius = _a.slopRadius,\n      onProgress = _a.onProgress,\n      onGestureFinish = _a.onGestureFinish;\n\n  var _b = react_1.useState(0),\n      currentPathCoordinateIndex = _b[0],\n      setCurrentPathCoordinateIndex = _b[1];\n\n  var _c = react_1.useState(0),\n      matchedGestureCoordinates = _c[0],\n      setMatchedGestureCoordinates = _c[1];\n\n  react_1.useEffect(function () {\n    return compute();\n  }, [gesture, path, currentPathCoordinateIndex, matchedGestureCoordinates, slopRadius, onProgress, onGestureFinish]);\n\n  var reset = function reset() {\n    setCurrentPathCoordinateIndex(0);\n    setMatchedGestureCoordinates(0);\n  };\n\n  var compute = function compute() {\n    if (currentPathCoordinateIndex < path.length - 1 && matchedGestureCoordinates < gesture.length) {\n      if (coordinateIsInRange({\n        gestureCoordinate: gesture[matchedGestureCoordinates],\n        candidateCoordinate: path[currentPathCoordinateIndex],\n        radius: slopRadius\n      })) {\n        onProgress((matchedGestureCoordinates + 1) / gesture.length);\n\n        if (matchedGestureCoordinates + 1 === gesture.length) {\n          onGestureFinish();\n        }\n\n        setMatchedGestureCoordinates(function (state) {\n          return state + 1;\n        });\n      }\n\n      setCurrentPathCoordinateIndex(function (state) {\n        return state + 1;\n      });\n    }\n  };\n\n  var coordinateIsInRange = function coordinateIsInRange(_a) {\n    var gestureCoordinate = _a.gestureCoordinate,\n        candidateCoordinate = _a.candidateCoordinate,\n        radius = _a.radius;\n    return Math.pow(candidateCoordinate.x - gestureCoordinate.x, 2) + Math.pow(candidateCoordinate.y - gestureCoordinate.y, 2) < Math.pow(radius, 2);\n  };\n\n  return {\n    reset: reset\n  };\n};\n\nexports.default = useDetector;","map":{"version":3,"sources":["C:/Users/Naor/Visual Code Files/WorkersManager/node_modules/react-native-gesture-detector/dist/useDetector.js"],"names":["Object","defineProperty","exports","value","react_1","require","useDetector","_a","gesture","path","slopRadius","onProgress","onGestureFinish","_b","useState","currentPathCoordinateIndex","setCurrentPathCoordinateIndex","_c","matchedGestureCoordinates","setMatchedGestureCoordinates","useEffect","compute","reset","length","coordinateIsInRange","gestureCoordinate","candidateCoordinate","radius","state","Math","pow","x","y","default"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nvar useDetector = function (_a) {\n    var gesture = _a.gesture, path = _a.path, slopRadius = _a.slopRadius, onProgress = _a.onProgress, onGestureFinish = _a.onGestureFinish;\n    var _b = react_1.useState(0), currentPathCoordinateIndex = _b[0], setCurrentPathCoordinateIndex = _b[1];\n    var _c = react_1.useState(0), matchedGestureCoordinates = _c[0], setMatchedGestureCoordinates = _c[1];\n    react_1.useEffect(function () { return compute(); }, [\n        gesture,\n        path,\n        currentPathCoordinateIndex,\n        matchedGestureCoordinates,\n        slopRadius,\n        onProgress,\n        onGestureFinish,\n    ]);\n    var reset = function () {\n        setCurrentPathCoordinateIndex(0);\n        setMatchedGestureCoordinates(0);\n    };\n    var compute = function () {\n        if (currentPathCoordinateIndex < path.length - 1 &&\n            matchedGestureCoordinates < gesture.length) {\n            if (coordinateIsInRange({\n                gestureCoordinate: gesture[matchedGestureCoordinates],\n                candidateCoordinate: path[currentPathCoordinateIndex],\n                radius: slopRadius,\n            })) {\n                onProgress((matchedGestureCoordinates + 1) / gesture.length);\n                if (matchedGestureCoordinates + 1 === gesture.length) {\n                    onGestureFinish();\n                }\n                setMatchedGestureCoordinates(function (state) { return state + 1; });\n            }\n            setCurrentPathCoordinateIndex(function (state) { return state + 1; });\n        }\n    };\n    var coordinateIsInRange = function (_a) {\n        var gestureCoordinate = _a.gestureCoordinate, candidateCoordinate = _a.candidateCoordinate, radius = _a.radius;\n        return Math.pow(candidateCoordinate.x - gestureCoordinate.x, 2) +\n            Math.pow(candidateCoordinate.y - gestureCoordinate.y, 2) <\n            Math.pow(radius, 2);\n    };\n    return {\n        reset: reset,\n    };\n};\nexports.default = useDetector;\n"]},"metadata":{},"sourceType":"script"}