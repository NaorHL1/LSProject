{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { StatusBar } from 'expo-status-bar';\nimport { useState } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Touchable from \"react-native-web/dist/exports/Touchable\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { LangPicker } from \"./components/LangPicker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState('En'),\n      _useState2 = _slicedToArray(_useState, 2),\n      chooseData = _useState2[0],\n      setchooseData = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLangVisible = _useState4[0],\n      setisLangVisible = _useState4[1];\n\n  var changeLangVisibility = function changeLangVisibility(bool) {\n    setisLangVisible(bool);\n  };\n\n  var setData = function setData(option) {\n    setchooseData(option);\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return changeLangVisibility(true);\n      },\n      style: styles.touchableOpacity,\n      children: _jsx(Text, {\n        style: styles.text,\n        children: chooseData\n      })\n    }), _jsx(Modal, {\n      transparent: true,\n      animationType: \"fade\",\n      visible: isLangVisible,\n      nRequestClose: function nRequestClose() {\n        return changeLangVisibility(false);\n      },\n      children: _jsx(LangPicker, {\n        changeLangVisibility: changeLangVisibility,\n        setData: setData\n      })\n    }), _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.sectionTitle,\n        children: \"Sign In\"\n      }), _jsx(StatusBar, {\n        style: \"auto\"\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#edf1f2',\n    resizeMode: 'contain'\n  },\n  sectionTitle: _objectSpread({\n    fontSize: 40,\n    fontWeight: 'bold'\n  }, Platform.select({\n    ios: {\n      alignSelf: 'flex-start'\n    },\n    android: {\n      alignSelf: 'flex-start'\n    },\n    default: {\n      alignSelf: 'center'\n    }\n  })),\n  text: _objectSpread({\n    marginVertical: 25,\n    fontSize: 20,\n    color: 'grey'\n  }, Platform.select({\n    ios: {\n      paddingTop: 80,\n      paddingHorizontal: 20\n    },\n    android: {\n      paddingHorizontal: 20\n    },\n    default: {\n      backgroundColor: \"white\"\n    }\n  })),\n  touchableOpacity: {\n    backgroundColor: '#edf1f2',\n    alignSelf: 'flex-end',\n    paddingHorizontal: 40\n  }\n});","map":{"version":3,"sources":["C:/Users/Naor/Visual Code Files/WorkersManager/App.js"],"names":["StatusBar","useState","LangPicker","App","chooseData","setchooseData","isLangVisible","setisLangVisible","changeLangVisibility","bool","setData","option","styles","container","touchableOpacity","text","sectionTitle","StyleSheet","create","flex","backgroundColor","resizeMode","fontSize","fontWeight","Platform","select","ios","alignSelf","android","default","marginVertical","color","paddingTop","paddingHorizontal"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { useState } from 'react';\nimport { SafeAreaView, StyleSheet, Text, Touchable, TouchableOpacity, View,Modal , Platform} from 'react-native';\nimport {LangPicker} from './components/LangPicker';\n\nexport default function App() {\n  \n\n  const [chooseData,setchooseData]=useState('En');\n  const [isLangVisible,setisLangVisible]= useState(false);\n\n  const changeLangVisibility=(bool)=>{\n    setisLangVisible(bool)\n  }\n  const setData=(option)=>{\n    setchooseData(option)\n  }\n  return (\n    <SafeAreaView style={styles.container}>\n      <TouchableOpacity onPress={()=>changeLangVisibility(true)} \n      style={styles.touchableOpacity}>\n        <Text style={styles.text}>{chooseData}</Text>\n        </TouchableOpacity>\n        <Modal transparent={true} animationType='fade' visible= {isLangVisible}\n        nRequestClose={()=>changeLangVisibility(false)}\n      >\n        <LangPicker\n          changeLangVisibility={changeLangVisibility}\n          setData={setData}>\n        </LangPicker>\n    </Modal>\n    <View style={styles.container}> \n      <Text style={styles.sectionTitle}>Sign In</Text>\n      <StatusBar style=\"auto\" />\n      </View>\n    </SafeAreaView>\n    \n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#edf1f2',\n    resizeMode: 'contain', \n  },\n  sectionTitle: {\n    fontSize: 40,\n    fontWeight: 'bold',\n    ...Platform.select({\n    ios: {\n      alignSelf:'flex-start'\n    },\n    android: {\n    alignSelf:'flex-start'\n    },\n    default: {\n      alignSelf:'center'\n    },\n  })\n  },\n  text:{\n    marginVertical: 25,\n    fontSize:20,\n    color:'grey',\n    ...Platform.select({\n      ios: {\n        paddingTop: 80,\n        paddingHorizontal:20\n      },\n      android: {\n      paddingHorizontal:20\n      },\n      default: {\n        backgroundColor:\"white\",\n        \n      },\n    })\n  },\n  touchableOpacity:{\n    backgroundColor: '#edf1f2',\n    alignSelf: 'flex-end',\n    paddingHorizontal:40,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}