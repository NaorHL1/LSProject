{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport react from \"react\";\nimport { DownOutlined } from '@ant-design/icons';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar OPTIONS = ['En', 'He'];\nvar WIDTH = Dimensions.get('window').width;\nvar HEIGHT = Dimensions.get('window').height;\nLangPicker.measure(function (fx, fy, width, height, px, py) {\n  console.log('Component width is: ' + width);\n  console.log('Component height is: ' + height);\n  console.log('X offset to frame: ' + fx);\n  console.log('Y offset to frame: ' + fy);\n  console.log('X offset to page: ' + px);\n  console.log('Y offset to page: ' + py);\n});\n\nvar LangPicker = function LangPicker(props) {\n  var onPressItem = function onPressItem(option) {\n    props.changeLangVisibility(false);\n    props.setData(option);\n  };\n\n  var option = OPTIONS.map(function (item, index) {\n    return _jsx(TouchableOpacity, {\n      style: styles.option,\n      onPress: function onPress() {\n        return onPressItem(item);\n      },\n      children: _jsx(Text, {\n        style: styles.text,\n        children: item\n      })\n    }, index);\n  });\n  return _jsx(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.changeLangVisibility(false);\n    },\n    style: styles.container,\n    children: _jsx(View, {\n      ref: function ref(view) {\n        _this.myComponent = view;\n      },\n      children: _jsx(View, {\n        style: (styles.lang, {\n          width: 50,\n          height: 70\n        }),\n        children: _jsx(ScrollView, {\n          children: option\n        })\n      })\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'flex-end',\n    borderColor: \"#e2e1df\",\n    borderWidth: 1.6,\n    opacity: 0.9\n  },\n  lang: {\n    backgroundColor: 'white'\n  },\n  option: {\n    alignItems: 'center'\n  },\n  text: _objectSpread({\n    fontSize: 22,\n    fontWeight: 'normal'\n  }, Platform.select({\n    ios: {\n      color: 'grey',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    android: {\n      color: 'grey'\n    },\n    default: {\n      color: 'black'\n    }\n  }))\n});\nexport { LangPicker };","map":{"version":3,"sources":["C:/Users/Naor/Visual Code Files/WorkersManager/components/LangPicker.js"],"names":["react","DownOutlined","OPTIONS","WIDTH","Dimensions","get","width","HEIGHT","height","LangPicker","measure","fx","fy","px","py","console","log","props","onPressItem","option","changeLangVisibility","setData","map","item","index","styles","text","container","view","myComponent","lang","StyleSheet","create","flex","alignItems","borderColor","borderWidth","opacity","backgroundColor","fontSize","fontWeight","Platform","select","ios","color","justifyContent","android","default"],"mappings":"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","sourcesContent":["import react from \"react\";\r\nimport {DownOutlined} from '@ant-design/icons';\r\nimport{\r\n    StyleSheet,Text,View,\r\n    TouchableOpacity, ScrollView,\r\n    Dimensions , Platform\r\n} from 'react-native'\r\nconst OPTIONS = ['En','He'];\r\nconst WIDTH=Dimensions.get('window').width;\r\nconst HEIGHT=Dimensions.get('window').height;\r\n\r\nLangPicker.measure( (fx, fy, width, height, px, py) => {\r\n\r\n    console.log('Component width is: ' + width)\r\n    console.log('Component height is: ' + height)\r\n    console.log('X offset to frame: ' + fx)\r\n    console.log('Y offset to frame: ' + fy)\r\n    console.log('X offset to page: ' + px)\r\n    console.log('Y offset to page: ' + py)\r\n})\r\n\r\nconst LangPicker=(props)=>{\r\n    const onPressItem=(option)=>{\r\n        props.changeLangVisibility(false);\r\n        props.setData(option);\r\n    }\r\n    const option=OPTIONS.map((item,index)=>{\r\n        return(\r\n            <TouchableOpacity\r\n            style={styles.option}\r\n            key={index}\r\n            onPress={()=> onPressItem(item)}\r\n            >\r\n                <Text style={styles.text}>{item}\r\n                </Text>\r\n            </TouchableOpacity>\r\n        )\r\n    })\r\n    return(\r\n        <TouchableOpacity\r\n        onPress={()=>props.changeLangVisibility(false)}\r\n        style={styles.container}\r\n        >\r\n            <View ref={view => { this.myComponent = view; }}>\r\n\r\n            <View style={styles.lang,{width:50,height:70}}>\r\n                <ScrollView>\r\n                    {option}\r\n                </ScrollView>\r\n            </View>\r\n            </View>\r\n\r\n        </TouchableOpacity>\r\n    )\r\n}\r\nconst styles= StyleSheet.create({\r\n    container: {\r\n        flex:1,\r\n        alignItems:'flex-end',\r\n        borderColor: \"#e2e1df\",\r\n        borderWidth: 1.6,\r\n        opacity:0.9,\r\n    },\r\n    lang:{\r\n        backgroundColor: 'white',\r\n        },\r\n    option:{\r\n        alignItems:'center',\r\n        },\r\n    text:{\r\n        fontSize:22,\r\n        fontWeight:'normal',\r\n        ...Platform.select({\r\n            ios: {\r\n            color:'grey',\r\n            alignItems:'center',\r\n            justifyContent:'center'\r\n            },\r\n            android: {\r\n            color:'grey',\r\n            },\r\n            default: {\r\n              color:'black',\r\n              \r\n            },\r\n          })\r\n    },\r\n})\r\n\r\nexport {LangPicker}"]},"metadata":{},"sourceType":"module"}