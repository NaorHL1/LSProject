{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _readOnlyError from \"@babel/runtime/helpers/readOnlyError\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from \"react\";\nimport { DownOutlined } from '@ant-design/icons';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport i18n from \"../Context/changelang\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar OPTIONS = ['En', 'He'];\nvar WIDTH = Dimensions.get('window').width;\nvar HEIGHT = Dimensions.get('window').height;\n\nvar wait = function wait(timeout) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, timeout);\n  });\n};\n\nvar LangPicker = function LangPicker(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      refreshing = _React$useState2[0],\n      setRefreshing = _React$useState2[1];\n\n  var onRefresh = React.useCallback(function () {\n    setRefreshing(true);\n    wait(2000).then(function () {\n      return setRefreshing(false);\n    });\n  }, []);\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var onPressItem = function onPressItem(option) {\n    props.changeLangVisibility(false);\n    props.setData(option);\n    i18n.changeLanguage(option === 'En' ? 'En' : 'He').then(function () {\n      I18nManager.swapLeftAndRightInRTL(i18n.language === 'He');\n      ({\n        refreshing: refreshing\n      }), _readOnlyError(\"refreshing\");\n      ({\n        onRefresh: onRefresh\n      }), _readOnlyError(\"onRefresh\");\n    });\n  };\n\n  var option = OPTIONS.map(function (item, index) {\n    return _jsx(TouchableOpacity, {\n      style: styles.option,\n      onPress: function onPress() {\n        return onPressItem(item);\n      },\n      children: _jsx(Text, {\n        style: styles.text,\n        children: _jsx(Trans, {\n          t: t,\n          children: item\n        })\n      })\n    }, index);\n  });\n  return _jsx(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.changeLangVisibility(false);\n    },\n    style: styles.container,\n    children: _jsx(View, {\n      style: [styles.lang, {\n        width: 50,\n        height: 70\n      }],\n      children: _jsx(ScrollView, {\n        children: option\n      })\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: i18n.language !== 'En' ? _objectSpread({\n    flex: 1,\n    alignItems: 'flex-start',\n    top: '10%',\n    left: '8%',\n    borderColor: \"#e2e1df\",\n    opacity: 0.9\n  }, Platform.select({\n    ios: {},\n    android: {},\n    default: {\n      width: '75%',\n      top: '30%',\n      left: '31%'\n    }\n  })) : _objectSpread({\n    flex: 1,\n    alignItems: 'flex-end',\n    top: '8%',\n    right: '8%',\n    borderColor: \"#e2e1df\",\n    opacity: 0.9\n  }, Platform.select({\n    ios: {},\n    android: {},\n    default: {\n      width: '75%',\n      top: '30%'\n    }\n  })),\n  lang: _objectSpread({\n    backgroundColor: 'white',\n    marginBottom: HEIGHT / 2\n  }, Platform.select({\n    ios: {\n      backgroundColor: 'whitesmoke'\n    },\n    android: {\n      backgroundColor: 'whitesmoke'\n    },\n    default: {}\n  })),\n  option: _objectSpread({\n    alignItems: 'center'\n  }, Platform.select({\n    ios: {},\n    android: {},\n    default: {\n      backgroundColor: 'white'\n    }\n  })),\n  text: _objectSpread({\n    fontSize: 22,\n    fontWeight: 'normal'\n  }, Platform.select({\n    ios: {\n      color: 'grey',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    android: {\n      color: 'grey',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    default: {\n      color: 'black'\n    }\n  }))\n});\nexport { LangPicker };","map":{"version":3,"sources":["C:/Users/Naor/Visual Code Files/WorkersManager/components/LangPicker.js"],"names":["React","DownOutlined","Trans","useTranslation","i18n","OPTIONS","WIDTH","Dimensions","get","width","HEIGHT","height","wait","timeout","Promise","resolve","setTimeout","LangPicker","props","useState","refreshing","setRefreshing","onRefresh","useCallback","then","t","onPressItem","option","changeLangVisibility","setData","changeLanguage","I18nManager","swapLeftAndRightInRTL","language","map","item","index","styles","text","container","lang","StyleSheet","create","flex","alignItems","top","left","borderColor","opacity","Platform","select","ios","android","default","right","backgroundColor","marginBottom","fontSize","fontWeight","color","justifyContent"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {DownOutlined} from '@ant-design/icons';\r\nimport{\r\n    StyleSheet,Text,View,\r\n    TouchableOpacity, ScrollView,\r\n    Dimensions , Platform\r\n} from 'react-native'\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport i18n from \"../Context/changelang\";\r\nimport { I18nManager } from \"react-native\";\r\n\r\n\r\nconst OPTIONS = ['En','He'];\r\nconst WIDTH=Dimensions.get('window').width;\r\nconst HEIGHT=Dimensions.get('window').height;\r\nconst wait = (timeout) => {\r\n    return new Promise(resolve => setTimeout(resolve, timeout));\r\n  }\r\nconst LangPicker=(props)=>{\r\n    const [refreshing, setRefreshing] = React.useState(false);\r\n    const onRefresh = React.useCallback(() => {\r\n        setRefreshing(true);\r\n        wait(2000).then(() => setRefreshing(false));\r\n      }, []);\r\n    \r\n    const {t,i18n}=useTranslation();\r\n    const onPressItem=(option)=>{\r\n        props.changeLangVisibility(false);\r\n        props.setData(option);\r\n        i18n.changeLanguage(option === 'En' ? 'En' : 'He')\r\n        .then(()=>{\r\n            I18nManager.swapLeftAndRightInRTL(i18n.language==='He');\r\n            refreshing={refreshing}\r\n            onRefresh={onRefresh};\r\n        });\r\n    }\r\n    const option=OPTIONS.map((item,index)=>{\r\n        return(\r\n            <TouchableOpacity\r\n            style={styles.option}\r\n            key={index}\r\n            onPress={()=> onPressItem(item)}\r\n            >\r\n                <Text style={styles.text}><Trans t={t}>{item}</Trans>\r\n                </Text>\r\n            </TouchableOpacity>\r\n        )\r\n    })\r\n    return(\r\n        <TouchableOpacity\r\n        onPress={()=>props.changeLangVisibility(false)}\r\n        style={styles.container}\r\n        >\r\n\r\n            <View style={[styles.lang,{width:50,height:70}]}>\r\n                <ScrollView>\r\n                    {option}\r\n                </ScrollView>\r\n            </View>\r\n\r\n        </TouchableOpacity>\r\n    )\r\n}\r\nconst styles= StyleSheet.create({\r\n    container:i18n.language!=='En'? {\r\n        flex:1,\r\n        alignItems:'flex-start',\r\n        top:'10%',\r\n        left:'8%',\r\n        borderColor: \"#e2e1df\",\r\n        opacity:0.9,\r\n        ...Platform.select({\r\n            ios:{},\r\n            android:{},\r\n            default:{width:'75%',top:'30%',left:'31%'},\r\n            \r\n        })\r\n    }\r\n        :\r\n        {\r\n        flex:1,\r\n        alignItems:'flex-end',\r\n        top:'8%',\r\n        right:'8%',\r\n        borderColor: \"#e2e1df\",\r\n        opacity:0.9,\r\n        ...Platform.select({\r\n            ios:{},\r\n            android:{},\r\n            default:{width:'75%',top:'30%',},\r\n            \r\n        })\r\n    },\r\n    lang:{\r\n        backgroundColor: 'white',\r\n        marginBottom:HEIGHT/2,\r\n        ...Platform.select({\r\n            ios:{backgroundColor:'whitesmoke',},\r\n            android:{backgroundColor:'whitesmoke',},\r\n            default:{},   \r\n        })\r\n    },  \r\n    option:{\r\n        alignItems:'center',\r\n        ...Platform.select({\r\n            ios: {\r\n            },\r\n            android: {\r\n\r\n            },\r\n            default: {\r\n                backgroundColor: 'white',\r\n                },\r\n          })\r\n        },\r\n    text:{\r\n        fontSize:22,\r\n        fontWeight:'normal',\r\n        ...Platform.select({\r\n            ios: {\r\n            color:'grey',\r\n            alignItems:'center',\r\n            justifyContent:'center'\r\n            },\r\n            android: {\r\n            color:'grey',\r\n            alignItems:'center',\r\n            justifyContent:'center'\r\n            },\r\n            default: {\r\n              color:'black',\r\n              \r\n            },\r\n          })\r\n    },\r\n})\r\n\r\nexport {LangPicker}"]},"metadata":{},"sourceType":"module"}