{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport react from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport { useState } from 'react';\nimport i18n from \"../Context/changelang\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CustomInput = function CustomInput(_ref) {\n  var value = _ref.value,\n      setValue = _ref.setValue,\n      placeholder = _ref.placeholder,\n      hidden = _ref.hidden;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      show = _useState2[0],\n      setShow = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      visible = _useState4[0],\n      setVisible = _useState4[1];\n\n  var _useState5 = useState(hidden),\n      _useState6 = _slicedToArray(_useState5, 2),\n      hidePassword = _useState6[0],\n      setHidePassword = _useState6[1];\n\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      placeholder: placeholder,\n      style: styles.input,\n      value: value,\n      onChangeText: setValue,\n      secureTextEntry: visible\n    }), hidden ? _jsx(TouchableOpacity, {\n      styles: styles.btnEye,\n      onPress: function onPress() {\n        setVisible(!visible);\n        setShow(!show);\n      },\n      children: _jsx(Icon, {\n        name: show === false ? 'visibility' : 'visibility-off',\n        size: 21,\n        style: styles.icon\n      })\n    }) : null]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    width: '79%'\n  },\n  input: {\n    textAlign: i18n.language === 'He' ? 'right' : 'left',\n    fontSize: 14,\n    fontWeight: '500',\n    fontFamily: Platform.OS === 'ios' || 'android' ? null : 'sans-serif',\n    marginTop: Platform.OS === 'ios' || 'android' ? 5 : 0,\n    lineHeight: Platform.OS === 'ios' || 'android' ? 20 : 40,\n    height: Platform.OS === 'ios' || 'android' ? 40 : 42,\n    paddingHorizontal: 5,\n    borderBottomWidth: 1.6,\n    borderBottomColor: '#B0B8BF'\n  },\n  btnEye: {\n    position: 'absolute',\n    color: 'black',\n    paddingRight: '100%'\n  },\n  icon: {\n    position: 'absolute',\n    left: '96%',\n    bottom: 7\n  }\n});\nexport default CustomInput;","map":{"version":3,"sources":["C:/Users/Naor/Visual Code Files/WorkersManager/components/CustomInput.js"],"names":["react","Icon","useState","i18n","CustomInput","value","setValue","placeholder","hidden","useTranslation","t","show","setShow","visible","setVisible","hidePassword","setHidePassword","styles","container","input","btnEye","icon","StyleSheet","create","width","textAlign","language","fontSize","fontWeight","fontFamily","Platform","OS","marginTop","lineHeight","height","paddingHorizontal","borderBottomWidth","borderBottomColor","position","color","paddingRight","left","bottom"],"mappings":"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","sourcesContent":["import react from 'react'\r\nimport{View,Text,TextInput,StyleSheet,Platform,TouchableOpacity, SafeAreaView} from 'react-native'\r\nimport Icon from 'react-native-vector-icons/MaterialIcons'\r\nimport { useState } from 'react';\r\nimport i18n from '../Context/changelang';\r\nimport { I18nManager } from 'react-native';\r\nconst CustomInput=({value,setValue,placeholder,hidden})=>{\r\n    const {t,i18n}=useTranslation();\r\n\r\n    const[show,setShow]=useState(false);\r\n    const[visible,setVisible]=useState(false);\r\n    const[hidePassword,setHidePassword]=useState(hidden);\r\n    return(\r\n        <SafeAreaView style={styles.container}>\r\n            <TextInput \r\n            placeholder={placeholder} \r\n            style={styles.input}\r\n            value={value}\r\n            onChangeText={setValue}\r\n            secureTextEntry={visible}\r\n            />\r\n            {hidden ? <TouchableOpacity styles={styles.btnEye}\r\n                onPress={()=>{\r\n                setVisible(!visible)\r\n                setShow(!show)\r\n                }\r\n            }>\r\n                <Icon name={show===false?'visibility':'visibility-off'} size={21} style={styles.icon}></Icon>\r\n                </TouchableOpacity> : null}\r\n        </SafeAreaView>\r\n    )\r\n}\r\nconst styles=StyleSheet.create({\r\n    container:{\r\n        width:'79%',\r\n    },\r\n    input:{\r\n        textAlign:i18n.language ==='He'?'right': 'left',\r\n        fontSize:14,\r\n        fontWeight:'500',\r\n        fontFamily:Platform.OS === 'ios' || 'android' ? null :'sans-serif',\r\n        marginTop: Platform.OS === 'ios' || 'android' ? 5 : 0,\r\n        lineHeight: Platform.OS === 'ios' || 'android' ? 20 : 40,\r\n        height:Platform.OS === 'ios' || 'android' ? 40 : 42,\r\n        paddingHorizontal:5,\r\n        borderBottomWidth:1.6,\r\n        borderBottomColor:'#B0B8BF'\r\n    },\r\n    btnEye:{\r\n        position:'absolute',\r\n        color:'black',\r\n        paddingRight:'100%',\r\n    },\r\n    icon:{\r\n        position:'absolute',\r\n        left:'96%',\r\n        bottom:7\r\n        },\r\n})\r\nexport default CustomInput"]},"metadata":{},"sourceType":"module"}