{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport react from \"react\";\nimport { DownOutlined } from '@ant-design/icons';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport i18n from \"../Context/changelang\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar OPTIONS = ['En', 'He'];\nvar WIDTH = Dimensions.get('window').width;\nvar HEIGHT = Dimensions.get('window').height;\n\nvar LangPicker = function LangPicker(props) {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var onPressItem = function onPressItem(option) {\n    props.changeLangVisibility(false);\n    props.setData(option);\n    i18n.changeLanguage(option === 'En' ? 'En' : 'He').then(function () {\n      I18nManager.setRTL(i18n.language === 'He');\n    });\n  };\n\n  var option = OPTIONS.map(function (item, index) {\n    return _jsx(TouchableOpacity, {\n      style: styles.option,\n      onPress: function onPress() {\n        return onPressItem(item);\n      },\n      children: _jsx(Text, {\n        style: styles.text,\n        children: _jsx(Trans, {\n          t: t,\n          children: item\n        })\n      })\n    }, index);\n  });\n  return _jsx(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.changeLangVisibility(false);\n    },\n    style: styles.container,\n    children: _jsx(View, {\n      style: [styles.lang, {\n        width: 50,\n        height: 70\n      }],\n      children: _jsx(ScrollView, {\n        children: option\n      })\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: _objectSpread({\n    flex: 1,\n    alignItems: 'flex-end',\n    top: '8%',\n    right: '8%',\n    borderColor: \"#e2e1df\",\n    opacity: 0.9\n  }, Platform.select({\n    ios: {},\n    android: {},\n    default: {\n      width: '75%',\n      top: '30%'\n    }\n  })),\n  lang: _objectSpread({\n    backgroundColor: 'white',\n    marginBottom: HEIGHT / 2\n  }, Platform.select({\n    ios: {\n      backgroundColor: 'whitesmoke'\n    },\n    android: {\n      backgroundColor: 'whitesmoke'\n    },\n    default: {}\n  })),\n  option: _objectSpread({\n    alignItems: 'center'\n  }, Platform.select({\n    ios: {},\n    android: {},\n    default: {\n      backgroundColor: 'white'\n    }\n  })),\n  text: _objectSpread({\n    fontSize: 22,\n    fontWeight: 'normal'\n  }, Platform.select({\n    ios: {\n      color: 'grey',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    android: {\n      color: 'grey',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    default: {\n      color: 'black'\n    }\n  }))\n});\nexport { LangPicker };","map":{"version":3,"sources":["C:/Users/Naor/Visual Code Files/WorkersManager/components/LangPicker.js"],"names":["react","DownOutlined","Trans","useTranslation","i18n","OPTIONS","WIDTH","Dimensions","get","width","HEIGHT","height","LangPicker","props","t","onPressItem","option","changeLangVisibility","setData","changeLanguage","then","I18nManager","setRTL","language","map","item","index","styles","text","container","lang","StyleSheet","create","flex","alignItems","top","right","borderColor","opacity","Platform","select","ios","android","default","backgroundColor","marginBottom","fontSize","fontWeight","color","justifyContent"],"mappings":"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","sourcesContent":["import react from \"react\";\r\nimport {DownOutlined} from '@ant-design/icons';\r\nimport{\r\n    StyleSheet,Text,View,\r\n    TouchableOpacity, ScrollView,\r\n    Dimensions , Platform\r\n} from 'react-native'\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport i18n from \"../Context/changelang\";\r\n\r\nconst OPTIONS = ['En','He'];\r\nconst WIDTH=Dimensions.get('window').width;\r\nconst HEIGHT=Dimensions.get('window').height;\r\n\r\nconst LangPicker=(props)=>{\r\n    const {t,i18n}=useTranslation();\r\n    const onPressItem=(option)=>{\r\n        props.changeLangVisibility(false);\r\n        props.setData(option);\r\n        i18n.changeLanguage(option === 'En' ? 'En' : 'He').then(()=>{\r\n            I18nManager.setRTL(i18n.language ==='He')});\r\n    }\r\n    const option=OPTIONS.map((item,index)=>{\r\n        return(\r\n            <TouchableOpacity\r\n            style={styles.option}\r\n            key={index}\r\n            onPress={()=> onPressItem(item)}\r\n            >\r\n                <Text style={styles.text}><Trans t={t}>{item}</Trans>\r\n                </Text>\r\n            </TouchableOpacity>\r\n        )\r\n    })\r\n    return(\r\n        <TouchableOpacity\r\n        onPress={()=>props.changeLangVisibility(false)}\r\n        style={styles.container}\r\n        >\r\n\r\n            <View style={[styles.lang,{width:50,height:70}]}>\r\n                <ScrollView>\r\n                    {option}\r\n                </ScrollView>\r\n            </View>\r\n\r\n        </TouchableOpacity>\r\n    )\r\n}\r\nconst styles= StyleSheet.create({\r\n    container: {\r\n        flex:1,\r\n        alignItems:'flex-end',\r\n        top:'8%',\r\n        right:'8%',\r\n        borderColor: \"#e2e1df\",\r\n        opacity:0.9,\r\n        ...Platform.select({\r\n            ios:{},\r\n            android:{},\r\n            default:{width:'75%',top:'30%',},\r\n            \r\n        })\r\n    },\r\n    lang:{\r\n        backgroundColor: 'white',\r\n        marginBottom:HEIGHT/2,\r\n        ...Platform.select({\r\n            ios:{backgroundColor:'whitesmoke',},\r\n            android:{backgroundColor:'whitesmoke',},\r\n            default:{},   \r\n        })\r\n    },  \r\n    option:{\r\n        alignItems:'center',\r\n        ...Platform.select({\r\n            ios: {\r\n            },\r\n            android: {\r\n\r\n            },\r\n            default: {\r\n                backgroundColor: 'white',\r\n                },\r\n          })\r\n        },\r\n    text:{\r\n        fontSize:22,\r\n        fontWeight:'normal',\r\n        ...Platform.select({\r\n            ios: {\r\n            color:'grey',\r\n            alignItems:'center',\r\n            justifyContent:'center'\r\n            },\r\n            android: {\r\n            color:'grey',\r\n            alignItems:'center',\r\n            justifyContent:'center'\r\n            },\r\n            default: {\r\n              color:'black',\r\n              \r\n            },\r\n          })\r\n    },\r\n})\r\n\r\nexport {LangPicker}"]},"metadata":{},"sourceType":"module"}