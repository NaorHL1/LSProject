{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport react from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar CustomButton = function CustomButton(_ref) {\n  var onPress = _ref.onPress,\n      text = _ref.text;\n  return _jsx(Pressable, {\n    onPress: onPress,\n    style: styles.container,\n    children: _jsx(Text, {\n      style: [styles.text, Platform.OS === 'native' ? {\n        userSelect: 'none'\n      } : {\n        userSelect: 'none'\n      }],\n      children: text\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: _objectSpread({\n    backgroundColor: '#5585F7'\n  }, Platform.select({\n    ios: {\n      alignItems: 'center',\n      width: '23%',\n      padding: 17,\n      borderRadius: 10,\n      left: '30%'\n    },\n    android: {\n      alignItems: 'center',\n      width: '23%',\n      padding: 17,\n      borderRadius: 10,\n      left: '30%'\n    },\n    default: {\n      width: 160,\n      padding: 10,\n      borderRadius: 5,\n      marginBottom: 10,\n      alignItems: 'center'\n    }\n  })),\n  text: {\n    color: 'white',\n    fontSize: 15,\n    fontWeight: '500',\n    fontFamily: Platform.OS === 'ios' || 'android' ? null : 'sans-serif'\n  }\n});\nexport default CustomButton;","map":{"version":3,"sources":["C:/Users/Naor/Visual Code Files/WorkersManager/components/CustomButton.js"],"names":["react","CustomButton","onPress","text","styles","container","Platform","OS","userSelect","StyleSheet","create","backgroundColor","select","ios","alignItems","width","padding","borderRadius","left","android","default","marginBottom","color","fontSize","fontWeight","fontFamily"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;AAGA,IAAMC,YAAY,GAAC,SAAbA,YAAa,OAAkB;AAAA,MAAhBC,OAAgB,QAAhBA,OAAgB;AAAA,MAARC,IAAQ,QAARA,IAAQ;AACjC,SACI,KAAC,SAAD;AAAW,IAAA,OAAO,EAAED,OAApB;AAA6B,IAAA,KAAK,EAAEE,MAAM,CAACC,SAA3C;AAAA,cACI,KAAC,IAAD;AAAO,MAAA,KAAK,EAAE,CAACD,MAAM,CAACD,IAAR,EAAaG,QAAQ,CAACC,EAAT,KAAc,QAAd,GAAuB;AAACC,QAAAA,UAAU,EAAC;AAAZ,OAAvB,GAA2C;AAACA,QAAAA,UAAU,EAAC;AAAZ,OAAxD,CAAd;AAAA,gBAA6FL;AAA7F;AADJ,IADJ;AAKH,CAND;;AAQA,IAAMC,MAAM,GAACK,UAAU,CAACC,MAAX,CAAkB;AAC3BL,EAAAA,SAAS;AAAEM,IAAAA,eAAe,EAAC;AAAlB,KACNL,QAAQ,CAACM,MAAT,CAAgB;AACfC,IAAAA,GAAG,EAAC;AACAC,MAAAA,UAAU,EAAC,QADX;AAEAC,MAAAA,KAAK,EAAC,KAFN;AAGAC,MAAAA,OAAO,EAAC,EAHR;AAIAC,MAAAA,YAAY,EAAC,EAJb;AAKAC,MAAAA,IAAI,EAAC;AALL,KADW;AAQfC,IAAAA,OAAO,EAAC;AACRL,MAAAA,UAAU,EAAC,QADH;AAERC,MAAAA,KAAK,EAAC,KAFE;AAGRC,MAAAA,OAAO,EAAC,EAHA;AAIRC,MAAAA,YAAY,EAAC,EAJL;AAKRC,MAAAA,IAAI,EAAC;AALG,KARO;AAefE,IAAAA,OAAO,EAAC;AACRL,MAAAA,KAAK,EAAC,GADE;AAERC,MAAAA,OAAO,EAAC,EAFA;AAGRC,MAAAA,YAAY,EAAC,CAHL;AAIRI,MAAAA,YAAY,EAAC,EAJL;AAKRP,MAAAA,UAAU,EAAC;AALH;AAfO,GAAhB,CADM,CADkB;AAyB3BX,EAAAA,IAAI,EAAC;AAACmB,IAAAA,KAAK,EAAC,OAAP;AACLC,IAAAA,QAAQ,EAAC,EADJ;AAELC,IAAAA,UAAU,EAAC,KAFN;AAGLC,IAAAA,UAAU,EAACnB,QAAQ,CAACC,EAAT,KAAgB,KAAhB,IAAyB,SAAzB,GAAqC,IAArC,GAA2C;AAHjD;AAzBsB,CAAlB,CAAb;AAgCA,eAAeN,YAAf","sourcesContent":["import react from \"react\";\r\nimport{View,Text,StyleSheet,Platform,Pressable} from 'react-native';\r\n\r\nconst CustomButton=({onPress,text})=>{\r\n    return(\r\n        <Pressable onPress={onPress} style={styles.container}>\r\n            <Text  style={[styles.text,Platform.OS==='native'?{userSelect:'none'}:{userSelect:'none'}]}>{text}</Text>\r\n        </Pressable>\r\n    );\r\n};\r\n\r\nconst styles=StyleSheet.create({\r\n    container:{backgroundColor:'#5585F7',\r\n    ...Platform.select({\r\n        ios:{\r\n            alignItems:'center',\r\n            width:'23%',\r\n            padding:17,\r\n            borderRadius:10,\r\n            left:'30%',\r\n        },\r\n        android:{\r\n        alignItems:'center',\r\n        width:'23%',\r\n        padding:17,\r\n        borderRadius:10,\r\n        left:'30%',\r\n    },\r\n        default:{\r\n        width:160,\r\n        padding:10,\r\n        borderRadius:5,\r\n        marginBottom:10 ,\r\n        alignItems:'center'},\r\n        })\r\n    },\r\n    text:{color:'white',\r\n    fontSize:15,\r\n    fontWeight:'500',\r\n    fontFamily:Platform.OS === 'ios' || 'android' ? null :'sans-serif',\r\n},\r\n})\r\n\r\nexport default CustomButton"]},"metadata":{},"sourceType":"module"}