{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar react_native_gesture_handler_1 = require(\"react-native-gesture-handler\");\n\nvar useDetector_1 = __importDefault(require(\"./useDetector\"));\n\nvar useGestureStore_1 = __importDefault(require(\"./useGestureStore\"));\n\nvar GestureDetector = function GestureDetector(_a) {\n  var children = _a.children,\n      slopRadius = _a.slopRadius,\n      gestures = _a.gestures,\n      _onProgress = _a.onProgress,\n      _onGestureFinish = _a.onGestureFinish,\n      onPanRelease = _a.onPanRelease;\n\n  var _b = useGestureStore_1.default(),\n      resetStore = _b.reset,\n      addBreadcrumbToPath = _b.addBreadcrumbToPath,\n      coordinate = _b.coordinate,\n      offset = _b.offset,\n      setCoordinate = _b.setCoordinate,\n      path = _b.path;\n\n  var detectors = {};\n  var gestureKeys = Object.keys(gestures);\n\n  var _loop_1 = function _loop_1(i) {\n    var gestureKey = gestureKeys[i];\n    var resetDetector = useDetector_1.default({\n      slopRadius: slopRadius,\n      path: path,\n      gesture: gestures[gestureKey],\n      onProgress: function onProgress(progress) {\n        _onProgress({\n          gesture: gestureKeys[i],\n          progress: progress\n        });\n      },\n      onGestureFinish: function onGestureFinish() {\n        _onGestureFinish(gestureKeys[i]);\n      }\n    }).reset;\n    detectors[gestureKey] = {\n      reset: resetDetector\n    };\n  };\n\n  for (var i = 0; i < gestureKeys.length; i++) {\n    _loop_1(i);\n  }\n\n  var reset = function reset() {\n    resetStore();\n\n    for (var i = 0; i < gestureKeys.length; i++) {\n      var gestureKey = gestureKeys[i];\n      detectors[gestureKey].reset();\n    }\n  };\n\n  return react_1.default.createElement(react_native_gesture_handler_1.PanGestureHandler, {\n    onGestureEvent: function onGestureEvent(_a) {\n      var nativeEvent = _a.nativeEvent;\n      addBreadcrumbToPath(nativeEvent);\n      setCoordinate({\n        x: nativeEvent.x,\n        y: nativeEvent.y\n      });\n    },\n    onHandlerStateChange: function onHandlerStateChange(_a) {\n      var nativeEvent = _a.nativeEvent;\n\n      if (nativeEvent.state === react_native_gesture_handler_1.State.END) {\n        reset();\n        onPanRelease();\n      }\n    }\n  }, children({\n    coordinate: coordinate,\n    offset: offset\n  }));\n};\n\nGestureDetector.defaultProps = {\n  gestures: {},\n  slopRadius: 50,\n  onProgress: function onProgress() {},\n  onGestureFinish: function onGestureFinish() {},\n  onPanRelease: function onPanRelease() {}\n};\nexports.default = GestureDetector;","map":{"version":3,"sources":["C:/Users/Naor/Visual Code Files/WorkersManager/node_modules/react-native-gesture-detector/dist/GestureDetector.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","react_1","require","react_native_gesture_handler_1","useDetector_1","useGestureStore_1","GestureDetector","_a","children","slopRadius","gestures","onProgress","onGestureFinish","onPanRelease","_b","default","resetStore","reset","addBreadcrumbToPath","coordinate","offset","setCoordinate","path","detectors","gestureKeys","keys","_loop_1","i","gestureKey","resetDetector","gesture","progress","length","createElement","PanGestureHandler","onGestureEvent","nativeEvent","x","y","onHandlerStateChange","state","State","END","defaultProps"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = __importDefault(require(\"react\"));\n// @ts-ignore or we will break expo example\nvar react_native_gesture_handler_1 = require(\"react-native-gesture-handler\");\nvar useDetector_1 = __importDefault(require(\"./useDetector\"));\nvar useGestureStore_1 = __importDefault(require(\"./useGestureStore\"));\nvar GestureDetector = function (_a) {\n    var children = _a.children, slopRadius = _a.slopRadius, gestures = _a.gestures, onProgress = _a.onProgress, onGestureFinish = _a.onGestureFinish, onPanRelease = _a.onPanRelease;\n    var _b = useGestureStore_1.default(), resetStore = _b.reset, addBreadcrumbToPath = _b.addBreadcrumbToPath, coordinate = _b.coordinate, offset = _b.offset, setCoordinate = _b.setCoordinate, path = _b.path;\n    var detectors = {};\n    var gestureKeys = Object.keys(gestures);\n    var _loop_1 = function (i) {\n        var gestureKey = gestureKeys[i];\n        var resetDetector = useDetector_1.default({\n            slopRadius: slopRadius,\n            path: path,\n            gesture: gestures[gestureKey],\n            onProgress: function (progress) {\n                onProgress({ gesture: gestureKeys[i], progress: progress });\n            },\n            onGestureFinish: function () {\n                onGestureFinish(gestureKeys[i]);\n            },\n        }).reset;\n        detectors[gestureKey] = {\n            reset: resetDetector,\n        };\n    };\n    for (var i = 0; i < gestureKeys.length; i++) {\n        _loop_1(i);\n    }\n    var reset = function () {\n        resetStore();\n        for (var i = 0; i < gestureKeys.length; i++) {\n            var gestureKey = gestureKeys[i];\n            detectors[gestureKey].reset();\n        }\n    };\n    return (react_1.default.createElement(react_native_gesture_handler_1.PanGestureHandler, { onGestureEvent: function (_a) {\n            var nativeEvent = _a.nativeEvent;\n            addBreadcrumbToPath(nativeEvent);\n            setCoordinate({ x: nativeEvent.x, y: nativeEvent.y });\n        }, onHandlerStateChange: function (_a) {\n            var nativeEvent = _a.nativeEvent;\n            if (nativeEvent.state === react_native_gesture_handler_1.State.END) {\n                reset();\n                onPanRelease();\n            }\n        } }, children({ coordinate: coordinate, offset: offset })));\n};\nGestureDetector.defaultProps = {\n    gestures: {},\n    slopRadius: 50,\n    onProgress: function () { },\n    onGestureFinish: function () { },\n    onPanRelease: function () { },\n};\nexports.default = GestureDetector;\n"]},"metadata":{},"sourceType":"script"}