{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport react from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport { useState } from 'react/cjs/react.production.min';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CustomInput = function CustomInput(_ref) {\n  var value = _ref.value,\n      setValue = _ref.setValue,\n      placeholder = _ref.placeholder,\n      secureTextEntry = _ref.secureTextEntry;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      show = _useState2[0],\n      setShow = _useState2[1];\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      placeholder: placeholder,\n      style: styles.input,\n      value: value,\n      onChangeText: setValue\n    }), _jsx(\"touchableOpacity\", {\n      style: styles.btnEye,\n      onPress: setShow(!show),\n      children: _jsx(Icon, {\n        name: show === false ? 'visibility' : 'visibility_off',\n        style: {\n          size: 35\n        }\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    width: '75%'\n  },\n  input: {\n    fontSize: 14,\n    fontWeight: '500',\n    lineHeight: Platform.OS === 'ios' ? 20 : 40,\n    height: Platform.OS === 'ios' ? 25 : 42,\n    paddingHorizontal: 5,\n    borderBottomWidth: 1.8,\n    borderBottomColor: '#79B5AF'\n  },\n  btnEye: {\n    position: 'absolute',\n    right: 25,\n    top: 8\n  }\n});\nexport default CustomInput;","map":{"version":3,"sources":["C:/Users/Naor/Visual Code Files/WorkersManager/components/CustomInput.js"],"names":["react","Icon","useState","CustomInput","value","setValue","placeholder","secureTextEntry","show","setShow","styles","container","input","btnEye","size","StyleSheet","create","width","fontSize","fontWeight","lineHeight","Platform","OS","height","paddingHorizontal","borderBottomWidth","borderBottomColor","position","right","top"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAEA,OAAOC,IAAP;AACA,SAASC,QAAT,QAAyB,gCAAzB;;;;AACA,IAAMC,WAAW,GAAC,SAAZA,WAAY,OAAgD;AAAA,MAA9CC,KAA8C,QAA9CA,KAA8C;AAAA,MAAxCC,QAAwC,QAAxCA,QAAwC;AAAA,MAA/BC,WAA+B,QAA/BA,WAA+B;AAAA,MAAnBC,eAAmB,QAAnBA,eAAmB;;AAC9D,kBAAoBL,QAAQ,CAAC,KAAD,CAA5B;AAAA;AAAA,MAAMM,IAAN;AAAA,MAAWC,OAAX;;AACA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,eACI,KAAC,SAAD;AACA,MAAA,WAAW,EAAEL,WADb;AAEA,MAAA,KAAK,EAAEI,MAAM,CAACE,KAFd;AAGA,MAAA,KAAK,EAAER,KAHP;AAIA,MAAA,YAAY,EAAEC;AAJd,MADJ,EAOI;AAAkB,MAAA,KAAK,EAAEK,MAAM,CAACG,MAAhC;AAAwC,MAAA,OAAO,EAC3CJ,OAAO,CAAC,CAACD,IAAF,CADX;AAAA,gBAGI,KAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,IAAI,KAAK,KAAT,GAAiB,YAAjB,GAAgC,gBAA5C;AAA8D,QAAA,KAAK,EAAE;AAACM,UAAAA,IAAI,EAAC;AAAN;AAArE;AAHJ,MAPJ;AAAA,IADJ;AAeH,CAjBD;;AAkBA,IAAMJ,MAAM,GAACK,UAAU,CAACC,MAAX,CAAkB;AAC3BL,EAAAA,SAAS,EAAC;AACNM,IAAAA,KAAK,EAAC;AADA,GADiB;AAI3BL,EAAAA,KAAK,EAAC;AACFM,IAAAA,QAAQ,EAAC,EADP;AAEFC,IAAAA,UAAU,EAAC,KAFT;AAGFC,IAAAA,UAAU,EAAEC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,EAAxB,GAA6B,EAHvC;AAIFC,IAAAA,MAAM,EAACF,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,EAAxB,GAA6B,EAJlC;AAKFE,IAAAA,iBAAiB,EAAC,CALhB;AAMFC,IAAAA,iBAAiB,EAAC,GANhB;AAOFC,IAAAA,iBAAiB,EAAC;AAPhB,GAJqB;AAa3Bb,EAAAA,MAAM,EAAC;AACHc,IAAAA,QAAQ,EAAC,UADN;AAEHC,IAAAA,KAAK,EAAC,EAFH;AAGHC,IAAAA,GAAG,EAAC;AAHD;AAboB,CAAlB,CAAb;AAmBA,eAAe1B,WAAf","sourcesContent":["import react from 'react'\r\nimport{View,Text,TextInput,StyleSheet,Platform} from 'react-native'\r\nimport Icon from 'react-native-vector-icons/MaterialIcons'\r\nimport { useState } from 'react/cjs/react.production.min'\r\nconst CustomInput=({value,setValue,placeholder,secureTextEntry})=>{\r\n    const[show,setShow]=useState(false);\r\n    return(\r\n        <View style={styles.container}>\r\n            <TextInput\r\n            placeholder={placeholder} \r\n            style={styles.input}\r\n            value={value}\r\n            onChangeText={setValue}\r\n            />\r\n            <touchableOpacity style={styles.btnEye} onPress={\r\n                setShow(!show)\r\n            }>\r\n                <Icon name={show === false ? 'visibility' : 'visibility_off'} style={{size:35}}/>\r\n            </touchableOpacity>\r\n        </View>\r\n    )\r\n}\r\nconst styles=StyleSheet.create({\r\n    container:{\r\n        width:'75%',\r\n    },\r\n    input:{\r\n        fontSize:14,\r\n        fontWeight:'500',\r\n        lineHeight: Platform.OS === 'ios' ? 20 : 40,\r\n        height:Platform.OS === 'ios' ? 25 : 42,\r\n        paddingHorizontal:5,\r\n        borderBottomWidth:1.8,\r\n        borderBottomColor:'#79B5AF'\r\n    },\r\n    btnEye:{\r\n        position:'absolute',\r\n        right:25,\r\n        top:8,\r\n    }\r\n})\r\nexport default CustomInput"]},"metadata":{},"sourceType":"module"}